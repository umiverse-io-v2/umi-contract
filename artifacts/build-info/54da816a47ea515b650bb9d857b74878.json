{
	"id": "54da816a47ea515b650bb9d857b74878",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"UmiverseVerifyV2.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\";\n\ncontract UmiverseVerifyV2 {\n    function isValidERC1271Signature(address signer, bytes32 hash, bytes memory signature) public view returns (bool){\n        return SignatureChecker.isValidERC1271SignatureNow(signer, hash, signature);\n    }\n    function isValidSignature(address signer, bytes32 hash, bytes memory signature) public view returns (bool){\n        return SignatureChecker.isValidSignatureNow(signer, hash, signature);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/SignatureChecker.sol)\n\npragma solidity ^0.8.20;\n\nimport {ECDSA} from \"./ECDSA.sol\";\nimport {IERC1271} from \"../../interfaces/IERC1271.sol\";\n\n/**\n * @dev Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA\n * signatures from externally owned accounts (EOAs) as well as ERC1271 signatures from smart contract wallets like\n * Argent and Safe Wallet (previously Gnosis Safe).\n */\nlibrary SignatureChecker {\n    /**\n     * @dev Checks if a signature is valid for a given signer and data hash. If the signer is a smart contract, the\n     * signature is validated against that smart contract using ERC1271, otherwise it's validated using `ECDSA.recover`.\n     *\n     * NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n     * change through time. It could return true at block N and false at block N+1 (or the opposite).\n     */\n    function isValidSignatureNow(address signer, bytes32 hash, bytes memory signature) internal view returns (bool) {\n        (address recovered, ECDSA.RecoverError error, ) = ECDSA.tryRecover(hash, signature);\n        return\n            (error == ECDSA.RecoverError.NoError && recovered == signer) ||\n            isValidERC1271SignatureNow(signer, hash, signature);\n    }\n\n    /**\n     * @dev Checks if a signature is valid for a given signer and data hash. The signature is validated\n     * against the signer smart contract using ERC1271.\n     *\n     * NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n     * change through time. It could return true at block N and false at block N+1 (or the opposite).\n     */\n    function isValidERC1271SignatureNow(\n        address signer,\n        bytes32 hash,\n        bytes memory signature\n    ) internal view returns (bool) {\n        (bool success, bytes memory result) = signer.staticcall(\n            abi.encodeCall(IERC1271.isValidSignature, (hash, signature))\n        );\n        return (success &&\n            result.length >= 32 &&\n            abi.decode(result, (bytes32)) == bytes32(IERC1271.isValidSignature.selector));\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1271.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1271.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC1271 standard signature validation method for\n * contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\n */\ninterface IERC1271 {\n    /**\n     * @dev Should return whether the signature provided is valid for the provided data\n     * @param hash      Hash of the data to be signed\n     * @param signature Signature byte array associated with _data\n     */\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4 magicValue);\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC1271.sol": {
				"IERC1271": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "magicValue",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC1271 standard signature validation method for contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].",
						"kind": "dev",
						"methods": {
							"isValidSignature(bytes32,bytes)": {
								"details": "Should return whether the signature provided is valid for the provided data",
								"params": {
									"hash": "Hash of the data to be signed",
									"signature": "Signature byte array associated with _data"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isValidSignature(bytes32,bytes)": "1626ba7e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC1271 standard signature validation method for contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\",\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data\",\"params\":{\"hash\":\"Hash of the data to be signed\",\"signature\":\"Signature byte array associated with _data\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":\"IERC1271\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x85a45f3f10014a0f8be41157a32b6a5f905753ea64a4b64e29fc12b7deeecf39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3c74009ce36136b36c77c23935b8e4a7b4f253be2da2be4fb4a916b1ce43743\",\"dweb:/ipfs/QmcH36v3iN7SJJuF73AunLR2LtNxhVJ1wm63ph4dPZ4pcL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ECDSA": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":344:7730  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":344:7730  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122048979745f14dc4a7dd48e239308ea7033f2ca3de3cb75e242038f2ee09fba16964736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122048979745f14dc4a7dd48e239308ea7033f2ca3de3cb75e242038f2ee09fba16964736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE SWAP8 SWAP8 GASLIMIT CALL 0x4D 0xC4 0xA7 0xDD BASEFEE 0xE2 CODECOPY ADDRESS DUP15 0xA7 SUB EXTCODEHASH 0x2C LOG3 0xDE EXTCODECOPY 0xB7 0x5E 0x24 KECCAK256 CODESIZE CALLCODE 0xEE MULMOD 0xFB LOG1 PUSH10 0x64736F6C634300081400 CALLER ",
							"sourceMap": "344:7386:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122048979745f14dc4a7dd48e239308ea7033f2ca3de3cb75e242038f2ee09fba16964736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE SWAP8 SWAP8 GASLIMIT CALL 0x4D 0xC4 0xA7 0xDD BASEFEE 0xE2 CODECOPY ADDRESS DUP15 0xA7 SUB EXTCODEHASH 0x2C LOG3 0xDE EXTCODECOPY 0xB7 0x5E 0x24 KECCAK256 CODESIZE CALLCODE 0xEE MULMOD 0xFB LOG1 PUSH10 0x64736F6C634300081400 CALLER ",
							"sourceMap": "344:7386:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError,bytes32)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122048979745f14dc4a7dd48e239308ea7033f2ca3de3cb75e242038f2ee09fba16964736f6c63430008140033",
									".code": [
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
								"UmiverseVerifyV2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol": {
				"SignatureChecker": {
					"abi": [],
					"devdoc": {
						"details": "Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA signatures from externally owned accounts (EOAs) as well as ERC1271 signatures from smart contract wallets like Argent and Safe Wallet (previously Gnosis Safe).",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":531:2273  library SignatureChecker {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":531:2273  library SignatureChecker {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202e275fb823bb70e32ab09ad79753a37a544456382fbb83ecea4d729ad5d6b5ce64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202e275fb823bb70e32ab09ad79753a37a544456382fbb83ecea4d729ad5d6b5ce64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0x27 PUSH0 0xB8 0x23 0xBB PUSH17 0xE32AB09AD79753A37A544456382FBB83EC 0xEA 0x4D PUSH19 0x9AD5D6B5CE64736F6C63430008140033000000 ",
							"sourceMap": "531:1742:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202e275fb823bb70e32ab09ad79753a37a544456382fbb83ecea4d729ad5d6b5ce64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0x27 PUSH0 0xB8 0x23 0xBB PUSH17 0xE32AB09AD79753A37A544456382FBB83EC 0xEA 0x4D PUSH19 0x9AD5D6B5CE64736F6C63430008140033000000 ",
							"sourceMap": "531:1742:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"isValidERC1271SignatureNow(address,bytes32,bytes memory)": "infinite",
								"isValidSignatureNow(address,bytes32,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 531,
									"end": 2273,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202e275fb823bb70e32ab09ad79753a37a544456382fbb83ecea4d729ad5d6b5ce64736f6c63430008140033",
									".code": [
										{
											"begin": 531,
											"end": 2273,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 531,
											"end": 2273,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 531,
											"end": 2273,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 531,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 531,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 2273,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 531,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 531,
											"end": 2273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 531,
											"end": 2273,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
								"UmiverseVerifyV2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA signatures from externally owned accounts (EOAs) as well as ERC1271 signatures from smart contract wallets like Argent and Safe Wallet (previously Gnosis Safe).\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":\"SignatureChecker\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x85a45f3f10014a0f8be41157a32b6a5f905753ea64a4b64e29fc12b7deeecf39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3c74009ce36136b36c77c23935b8e4a7b4f253be2da2be4fb4a916b1ce43743\",\"dweb:/ipfs/QmcH36v3iN7SJJuF73AunLR2LtNxhVJ1wm63ph4dPZ4pcL\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0x6b11eb41a228cca35d4b662b4df69fcd75192851365102690f57b2ac01e83fe6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab006a2983ed350d2af21ddcdd835dcae3b8340086cc4d088460da5abd041f69\",\"dweb:/ipfs/QmbEacDhkJZiGrgzLjB4pNtE8Z1uudjDw1DvcDUTVQFsLG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"UmiverseVerifyV2.sol": {
				"UmiverseVerifyV2": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "isValidERC1271Signature",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"UmiverseVerifyV2.sol\":132:567  contract UmiverseVerifyV2 {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"UmiverseVerifyV2.sol\":132:567  contract UmiverseVerifyV2 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x235110ca\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x238a4d1e\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"UmiverseVerifyV2.sol\":164:369  function isValidERC1271Signature(address signer, bytes32 hash, bytes memory signature) public view returns (bool){... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"UmiverseVerifyV2.sol\":374:565  function isValidSignature(address signer, bytes32 hash, bytes memory signature) public view returns (bool){... */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_12:\n      tag_13\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"UmiverseVerifyV2.sol\":164:369  function isValidERC1271Signature(address signer, bytes32 hash, bytes memory signature) public view returns (bool){... */\n    tag_8:\n        /* \"UmiverseVerifyV2.sol\":272:276  bool */\n      0x00\n        /* \"UmiverseVerifyV2.sol\":294:362  SignatureChecker.isValidERC1271SignatureNow(signer, hash, signature) */\n      tag_16\n        /* \"UmiverseVerifyV2.sol\":338:344  signer */\n      dup5\n        /* \"UmiverseVerifyV2.sol\":346:350  hash */\n      dup5\n        /* \"UmiverseVerifyV2.sol\":352:361  signature */\n      dup5\n        /* \"UmiverseVerifyV2.sol\":294:337  SignatureChecker.isValidERC1271SignatureNow */\n      tag_17\n        /* \"UmiverseVerifyV2.sol\":294:362  SignatureChecker.isValidERC1271SignatureNow(signer, hash, signature) */\n      jump\t// in\n    tag_16:\n        /* \"UmiverseVerifyV2.sol\":287:362  return SignatureChecker.isValidERC1271SignatureNow(signer, hash, signature) */\n      swap1\n      pop\n        /* \"UmiverseVerifyV2.sol\":164:369  function isValidERC1271Signature(address signer, bytes32 hash, bytes memory signature) public view returns (bool){... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"UmiverseVerifyV2.sol\":374:565  function isValidSignature(address signer, bytes32 hash, bytes memory signature) public view returns (bool){... */\n    tag_13:\n        /* \"UmiverseVerifyV2.sol\":475:479  bool */\n      0x00\n        /* \"UmiverseVerifyV2.sol\":497:558  SignatureChecker.isValidSignatureNow(signer, hash, signature) */\n      tag_19\n        /* \"UmiverseVerifyV2.sol\":534:540  signer */\n      dup5\n        /* \"UmiverseVerifyV2.sol\":542:546  hash */\n      dup5\n        /* \"UmiverseVerifyV2.sol\":548:557  signature */\n      dup5\n        /* \"UmiverseVerifyV2.sol\":497:533  SignatureChecker.isValidSignatureNow */\n      tag_20\n        /* \"UmiverseVerifyV2.sol\":497:558  SignatureChecker.isValidSignatureNow(signer, hash, signature) */\n      jump\t// in\n    tag_19:\n        /* \"UmiverseVerifyV2.sol\":490:558  return SignatureChecker.isValidSignatureNow(signer, hash, signature) */\n      swap1\n      pop\n        /* \"UmiverseVerifyV2.sol\":374:565  function isValidSignature(address signer, bytes32 hash, bytes memory signature) public view returns (bool){... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1813:2271  function isValidERC1271SignatureNow(... */\n    tag_17:\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1956:1960  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1973:1985  bool success */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1987:2006  bytes memory result */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2010:2016  signer */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2010:2027  signer.staticcall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2084:2088  hash */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2090:2099  signature */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2041:2101  abi.encodeCall(IERC1271.isValidSignature, (hash, signature)) */\n      add(0x24, mload(0x40))\n      tag_22\n      swap3\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      shl(0xe0, 0x1626ba7e)\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2010:2111  signer.staticcall(... */\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      staticcall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_28\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_27)\n    tag_28:\n      0x60\n      swap2\n      pop\n    tag_27:\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1972:2111  (bool success, bytes memory result) = signer.staticcall(... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2129:2136  success */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2129:2171  success &&... */\n      dup1\n      iszero\n      tag_29\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2169:2171  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2152:2158  result */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2152:2165  result.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2152:2171  result.length >= 32 */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2129:2171  success &&... */\n    tag_29:\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2129:2263  success &&... */\n      dup1\n      iszero\n      tag_30\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2228:2262  IERC1271.isValidSignature.selector */\n      shl(0xe0, 0x1626ba7e)\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2220:2263  bytes32(IERC1271.isValidSignature.selector) */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2198:2204  result */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2187:2216  abi.decode(result, (bytes32)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2187:2263  abi.decode(result, (bytes32)) == bytes32(IERC1271.isValidSignature.selector) */\n      eq\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2129:2263  success &&... */\n    tag_30:\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":2121:2264  return (success &&... */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1813:2271  function isValidERC1271SignatureNow(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1039:1407  function isValidSignatureNow(address signer, bytes32 hash, bytes memory signature) internal view returns (bool) {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1145:1149  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1162:1179  address recovered */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1181:1205  ECDSA.RecoverError error */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1211:1244  ECDSA.tryRecover(hash, signature) */\n      tag_34\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1228:1232  hash */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1234:1243  signature */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1211:1227  ECDSA.tryRecover */\n      tag_35\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1211:1244  ECDSA.tryRecover(hash, signature) */\n      jump\t// in\n    tag_34:\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1161:1244  (address recovered, ECDSA.RecoverError error, ) = ECDSA.tryRecover(hash, signature) */\n      pop\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1283:1309  ECDSA.RecoverError.NoError */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1274:1309  error == ECDSA.RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_36\n      jumpi\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n    tag_36:\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1274:1279  error */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1274:1309  error == ECDSA.RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_39\n      jumpi\n      tag_40\n      tag_38\n      jump\t// in\n    tag_40:\n    tag_39:\n      eq\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1274:1332  error == ECDSA.RecoverError.NoError && recovered == signer */\n      dup1\n      iszero\n      tag_41\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1326:1332  signer */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1313:1332  recovered == signer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1313:1322  recovered */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1313:1332  recovered == signer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1274:1332  error == ECDSA.RecoverError.NoError && recovered == signer */\n    tag_41:\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1273:1400  (error == ECDSA.RecoverError.NoError && recovered == signer) ||... */\n      dup1\n      tag_42\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1349:1400  isValidERC1271SignatureNow(signer, hash, signature) */\n      tag_43\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1376:1382  signer */\n      dup7\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1384:1388  hash */\n      dup7\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1390:1399  signature */\n      dup7\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1349:1375  isValidERC1271SignatureNow */\n      tag_17\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1349:1400  isValidERC1271SignatureNow(signer, hash, signature) */\n      jump\t// in\n    tag_43:\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1273:1400  (error == ECDSA.RecoverError.NoError && recovered == signer) ||... */\n    tag_42:\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1254:1400  return... */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":1039:1407  function isValidSignatureNow(address signer, bytes32 hash, bytes memory signature) internal view returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2129:2895  function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2210:2217  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2219:2231  RecoverError */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2233:2240  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2276:2278  65 */\n      0x41\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2256:2265  signature */\n      dup5\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2256:2272  signature.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2256:2278  signature.length == 65 */\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2252:2889  if (signature.length == 65) {... */\n      tag_45\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2294:2303  bytes32 r */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2317:2326  bytes32 s */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2340:2347  uint8 v */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2592:2596  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2581:2590  signature */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2577:2597  add(signature, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2571:2598  mload(add(signature, 0x20)) */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2566:2598  r := mload(add(signature, 0x20)) */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2641:2645  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2630:2639  signature */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2626:2646  add(signature, 0x40) */\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2620:2647  mload(add(signature, 0x40)) */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2615:2647  s := mload(add(signature, 0x40)) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2698:2702  0x60 */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2687:2696  signature */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2683:2703  add(signature, 0x60) */\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2677:2704  mload(add(signature, 0x60)) */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2674:2675  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2669:2705  byte(0, mload(add(signature, 0x60))) */\n      byte\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2664:2705  v := byte(0, mload(add(signature, 0x60))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2739:2764  tryRecover(hash, v, r, s) */\n      tag_46\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2750:2754  hash */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2756:2757  v */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2759:2760  r */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2762:2763  s */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2739:2749  tryRecover */\n      tag_47\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2739:2764  tryRecover(hash, v, r, s) */\n      jump\t// in\n    tag_46:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2732:2764  return tryRecover(hash, v, r, s) */\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n      jump(tag_44)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2252:2889  if (signature.length == 65) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2811:2812  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2815:2850  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2860:2869  signature */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2860:2876  signature.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2852:2877  bytes32(signature.length) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2795:2878  return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length)) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2129:2895  function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {... */\n    tag_44:\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5140:6670  function tryRecover(... */\n    tag_47:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5266:5273  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5275:5287  RecoverError */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5289:5296  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6199:6265  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6194:6195  s */\n      dup5\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6186:6196  uint256(s) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6186:6265  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6182:6346  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      iszero\n      tag_50\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6297:6298  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6301:6331  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6333:6334  s */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6281:6335  return (address(0), RecoverError.InvalidSignatureS, s) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n      jump(tag_49)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6182:6346  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6440:6454  address signer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6457:6481  ecrecover(hash, v, r, s) */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6467:6471  hash */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6473:6474  v */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6476:6477  r */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6479:6480  s */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6457:6481  ecrecover(hash, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      tag_51\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_54\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_54:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6440:6481  address signer = ecrecover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6513:6514  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6495:6515  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6495:6501  signer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6495:6515  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6491:6604  if (signer == address(0)) {... */\n      tag_55\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6547:6548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6551:6580  RecoverError.InvalidSignature */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6590:6591  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6582:6592  bytes32(0) */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6531:6593  return (address(0), RecoverError.InvalidSignature, bytes32(0)) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      jump(tag_49)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6491:6604  if (signer == address(0)) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6622:6628  signer */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6630:6650  RecoverError.NoError */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6660:6661  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6652:6662  bytes32(0) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6614:6663  return (signer, RecoverError.NoError, bytes32(0)) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5140:6670  function tryRecover(... */\n    tag_49:\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_56:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_57:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_58:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_59:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_60:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_94\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_59\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_61:\n        /* \"#utility.yul\":641:665   */\n      tag_96\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_60\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_97\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_97:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_62:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_99\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_61\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_63:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_64:\n        /* \"#utility.yul\":997:1021   */\n      tag_102\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_63\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_103\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_103:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_65:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_105\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_64\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1314   */\n    tag_66:\n        /* \"#utility.yul\":1306:1307   */\n      0x00\n        /* \"#utility.yul\":1303:1304   */\n      dup1\n        /* \"#utility.yul\":1296:1308   */\n      revert\n        /* \"#utility.yul\":1320:1437   */\n    tag_67:\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1426:1427   */\n      dup1\n        /* \"#utility.yul\":1419:1431   */\n      revert\n        /* \"#utility.yul\":1443:1545   */\n    tag_68:\n        /* \"#utility.yul\":1484:1490   */\n      0x00\n        /* \"#utility.yul\":1535:1537   */\n      0x1f\n        /* \"#utility.yul\":1531:1538   */\n      not\n        /* \"#utility.yul\":1526:1528   */\n      0x1f\n        /* \"#utility.yul\":1519:1524   */\n      dup4\n        /* \"#utility.yul\":1515:1529   */\n      add\n        /* \"#utility.yul\":1511:1539   */\n      and\n        /* \"#utility.yul\":1501:1539   */\n      swap1\n      pop\n        /* \"#utility.yul\":1443:1545   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1551:1731   */\n    tag_69:\n        /* \"#utility.yul\":1599:1676   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1596:1597   */\n      0x00\n        /* \"#utility.yul\":1589:1677   */\n      mstore\n        /* \"#utility.yul\":1696:1700   */\n      0x41\n        /* \"#utility.yul\":1693:1694   */\n      0x04\n        /* \"#utility.yul\":1686:1701   */\n      mstore\n        /* \"#utility.yul\":1720:1724   */\n      0x24\n        /* \"#utility.yul\":1717:1718   */\n      0x00\n        /* \"#utility.yul\":1710:1725   */\n      revert\n        /* \"#utility.yul\":1737:2018   */\n    tag_70:\n        /* \"#utility.yul\":1820:1847   */\n      tag_111\n        /* \"#utility.yul\":1842:1846   */\n      dup3\n        /* \"#utility.yul\":1820:1847   */\n      tag_68\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":1812:1818   */\n      dup2\n        /* \"#utility.yul\":1808:1848   */\n      add\n        /* \"#utility.yul\":1950:1956   */\n      dup2\n        /* \"#utility.yul\":1938:1948   */\n      dup2\n        /* \"#utility.yul\":1935:1957   */\n      lt\n        /* \"#utility.yul\":1914:1932   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1902:1912   */\n      dup3\n        /* \"#utility.yul\":1899:1933   */\n      gt\n        /* \"#utility.yul\":1896:1958   */\n      or\n        /* \"#utility.yul\":1893:1981   */\n      iszero\n      tag_112\n      jumpi\n        /* \"#utility.yul\":1961:1979   */\n      tag_113\n      tag_69\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":1893:1981   */\n    tag_112:\n        /* \"#utility.yul\":2001:2011   */\n      dup1\n        /* \"#utility.yul\":1997:1999   */\n      0x40\n        /* \"#utility.yul\":1990:2012   */\n      mstore\n        /* \"#utility.yul\":1780:2018   */\n      pop\n        /* \"#utility.yul\":1737:2018   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2024:2153   */\n    tag_71:\n        /* \"#utility.yul\":2058:2064   */\n      0x00\n        /* \"#utility.yul\":2085:2105   */\n      tag_115\n      tag_56\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":2075:2105   */\n      swap1\n      pop\n        /* \"#utility.yul\":2114:2147   */\n      tag_116\n        /* \"#utility.yul\":2142:2146   */\n      dup3\n        /* \"#utility.yul\":2134:2140   */\n      dup3\n        /* \"#utility.yul\":2114:2147   */\n      tag_70\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":2024:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2466   */\n    tag_72:\n        /* \"#utility.yul\":2220:2224   */\n      0x00\n        /* \"#utility.yul\":2310:2328   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2302:2308   */\n      dup3\n        /* \"#utility.yul\":2299:2329   */\n      gt\n        /* \"#utility.yul\":2296:2352   */\n      iszero\n      tag_118\n      jumpi\n        /* \"#utility.yul\":2332:2350   */\n      tag_119\n      tag_69\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":2296:2352   */\n    tag_118:\n        /* \"#utility.yul\":2370:2399   */\n      tag_120\n        /* \"#utility.yul\":2392:2398   */\n      dup3\n        /* \"#utility.yul\":2370:2399   */\n      tag_68\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":2362:2399   */\n      swap1\n      pop\n        /* \"#utility.yul\":2454:2458   */\n      0x20\n        /* \"#utility.yul\":2448:2452   */\n      dup2\n        /* \"#utility.yul\":2444:2459   */\n      add\n        /* \"#utility.yul\":2436:2459   */\n      swap1\n      pop\n        /* \"#utility.yul\":2159:2466   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2472:2618   */\n    tag_73:\n        /* \"#utility.yul\":2569:2575   */\n      dup3\n        /* \"#utility.yul\":2564:2567   */\n      dup2\n        /* \"#utility.yul\":2559:2562   */\n      dup4\n        /* \"#utility.yul\":2546:2576   */\n      calldatacopy\n        /* \"#utility.yul\":2610:2611   */\n      0x00\n        /* \"#utility.yul\":2601:2607   */\n      dup4\n        /* \"#utility.yul\":2596:2599   */\n      dup4\n        /* \"#utility.yul\":2592:2608   */\n      add\n        /* \"#utility.yul\":2585:2612   */\n      mstore\n        /* \"#utility.yul\":2472:2618   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2624:3047   */\n    tag_74:\n        /* \"#utility.yul\":2701:2706   */\n      0x00\n        /* \"#utility.yul\":2726:2791   */\n      tag_123\n        /* \"#utility.yul\":2742:2790   */\n      tag_124\n        /* \"#utility.yul\":2783:2789   */\n      dup5\n        /* \"#utility.yul\":2742:2790   */\n      tag_72\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":2726:2791   */\n      tag_71\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":2717:2791   */\n      swap1\n      pop\n        /* \"#utility.yul\":2814:2820   */\n      dup3\n        /* \"#utility.yul\":2807:2812   */\n      dup2\n        /* \"#utility.yul\":2800:2821   */\n      mstore\n        /* \"#utility.yul\":2852:2856   */\n      0x20\n        /* \"#utility.yul\":2845:2850   */\n      dup2\n        /* \"#utility.yul\":2841:2857   */\n      add\n        /* \"#utility.yul\":2890:2893   */\n      dup5\n        /* \"#utility.yul\":2881:2887   */\n      dup5\n        /* \"#utility.yul\":2876:2879   */\n      dup5\n        /* \"#utility.yul\":2872:2888   */\n      add\n        /* \"#utility.yul\":2869:2894   */\n      gt\n        /* \"#utility.yul\":2866:2978   */\n      iszero\n      tag_125\n      jumpi\n        /* \"#utility.yul\":2897:2976   */\n      tag_126\n      tag_67\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":2866:2978   */\n    tag_125:\n        /* \"#utility.yul\":2987:3041   */\n      tag_127\n        /* \"#utility.yul\":3034:3040   */\n      dup5\n        /* \"#utility.yul\":3029:3032   */\n      dup3\n        /* \"#utility.yul\":3024:3027   */\n      dup6\n        /* \"#utility.yul\":2987:3041   */\n      tag_73\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":2707:3047   */\n      pop\n        /* \"#utility.yul\":2624:3047   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3066:3404   */\n    tag_75:\n        /* \"#utility.yul\":3121:3126   */\n      0x00\n        /* \"#utility.yul\":3170:3173   */\n      dup3\n        /* \"#utility.yul\":3163:3167   */\n      0x1f\n        /* \"#utility.yul\":3155:3161   */\n      dup4\n        /* \"#utility.yul\":3151:3168   */\n      add\n        /* \"#utility.yul\":3147:3174   */\n      slt\n        /* \"#utility.yul\":3137:3259   */\n      tag_129\n      jumpi\n        /* \"#utility.yul\":3178:3257   */\n      tag_130\n      tag_66\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":3137:3259   */\n    tag_129:\n        /* \"#utility.yul\":3295:3301   */\n      dup2\n        /* \"#utility.yul\":3282:3302   */\n      calldataload\n        /* \"#utility.yul\":3320:3398   */\n      tag_131\n        /* \"#utility.yul\":3394:3397   */\n      dup5\n        /* \"#utility.yul\":3386:3392   */\n      dup3\n        /* \"#utility.yul\":3379:3383   */\n      0x20\n        /* \"#utility.yul\":3371:3377   */\n      dup7\n        /* \"#utility.yul\":3367:3384   */\n      add\n        /* \"#utility.yul\":3320:3398   */\n      tag_74\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":3311:3398   */\n      swap2\n      pop\n        /* \"#utility.yul\":3127:3404   */\n      pop\n        /* \"#utility.yul\":3066:3404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3410:4207   */\n    tag_7:\n        /* \"#utility.yul\":3496:3502   */\n      0x00\n        /* \"#utility.yul\":3504:3510   */\n      dup1\n        /* \"#utility.yul\":3512:3518   */\n      0x00\n        /* \"#utility.yul\":3561:3563   */\n      0x60\n        /* \"#utility.yul\":3549:3558   */\n      dup5\n        /* \"#utility.yul\":3540:3547   */\n      dup7\n        /* \"#utility.yul\":3536:3559   */\n      sub\n        /* \"#utility.yul\":3532:3564   */\n      slt\n        /* \"#utility.yul\":3529:3648   */\n      iszero\n      tag_133\n      jumpi\n        /* \"#utility.yul\":3567:3646   */\n      tag_134\n      tag_57\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":3529:3648   */\n    tag_133:\n        /* \"#utility.yul\":3687:3688   */\n      0x00\n        /* \"#utility.yul\":3712:3765   */\n      tag_135\n        /* \"#utility.yul\":3757:3764   */\n      dup7\n        /* \"#utility.yul\":3748:3754   */\n      dup3\n        /* \"#utility.yul\":3737:3746   */\n      dup8\n        /* \"#utility.yul\":3733:3755   */\n      add\n        /* \"#utility.yul\":3712:3765   */\n      tag_62\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":3702:3765   */\n      swap4\n      pop\n        /* \"#utility.yul\":3658:3775   */\n      pop\n        /* \"#utility.yul\":3814:3816   */\n      0x20\n        /* \"#utility.yul\":3840:3893   */\n      tag_136\n        /* \"#utility.yul\":3885:3892   */\n      dup7\n        /* \"#utility.yul\":3876:3882   */\n      dup3\n        /* \"#utility.yul\":3865:3874   */\n      dup8\n        /* \"#utility.yul\":3861:3883   */\n      add\n        /* \"#utility.yul\":3840:3893   */\n      tag_65\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":3830:3893   */\n      swap3\n      pop\n        /* \"#utility.yul\":3785:3903   */\n      pop\n        /* \"#utility.yul\":3970:3972   */\n      0x40\n        /* \"#utility.yul\":3959:3968   */\n      dup5\n        /* \"#utility.yul\":3955:3973   */\n      add\n        /* \"#utility.yul\":3942:3974   */\n      calldataload\n        /* \"#utility.yul\":4001:4019   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3993:3999   */\n      dup2\n        /* \"#utility.yul\":3990:4020   */\n      gt\n        /* \"#utility.yul\":3987:4104   */\n      iszero\n      tag_137\n      jumpi\n        /* \"#utility.yul\":4023:4102   */\n      tag_138\n      tag_58\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":3987:4104   */\n    tag_137:\n        /* \"#utility.yul\":4128:4190   */\n      tag_139\n        /* \"#utility.yul\":4182:4189   */\n      dup7\n        /* \"#utility.yul\":4173:4179   */\n      dup3\n        /* \"#utility.yul\":4162:4171   */\n      dup8\n        /* \"#utility.yul\":4158:4180   */\n      add\n        /* \"#utility.yul\":4128:4190   */\n      tag_75\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":4118:4190   */\n      swap2\n      pop\n        /* \"#utility.yul\":3913:4200   */\n      pop\n        /* \"#utility.yul\":3410:4207   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4213:4303   */\n    tag_76:\n        /* \"#utility.yul\":4247:4254   */\n      0x00\n        /* \"#utility.yul\":4290:4295   */\n      dup2\n        /* \"#utility.yul\":4283:4296   */\n      iszero\n        /* \"#utility.yul\":4276:4297   */\n      iszero\n        /* \"#utility.yul\":4265:4297   */\n      swap1\n      pop\n        /* \"#utility.yul\":4213:4303   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4309:4418   */\n    tag_77:\n        /* \"#utility.yul\":4390:4411   */\n      tag_142\n        /* \"#utility.yul\":4405:4410   */\n      dup2\n        /* \"#utility.yul\":4390:4411   */\n      tag_76\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":4385:4388   */\n      dup3\n        /* \"#utility.yul\":4378:4412   */\n      mstore\n        /* \"#utility.yul\":4309:4418   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4424:4634   */\n    tag_10:\n        /* \"#utility.yul\":4511:4515   */\n      0x00\n        /* \"#utility.yul\":4549:4551   */\n      0x20\n        /* \"#utility.yul\":4538:4547   */\n      dup3\n        /* \"#utility.yul\":4534:4552   */\n      add\n        /* \"#utility.yul\":4526:4552   */\n      swap1\n      pop\n        /* \"#utility.yul\":4562:4627   */\n      tag_144\n        /* \"#utility.yul\":4624:4625   */\n      0x00\n        /* \"#utility.yul\":4613:4622   */\n      dup4\n        /* \"#utility.yul\":4609:4626   */\n      add\n        /* \"#utility.yul\":4600:4606   */\n      dup5\n        /* \"#utility.yul\":4562:4627   */\n      tag_77\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":4424:4634   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4640:4758   */\n    tag_78:\n        /* \"#utility.yul\":4727:4751   */\n      tag_146\n        /* \"#utility.yul\":4745:4750   */\n      dup2\n        /* \"#utility.yul\":4727:4751   */\n      tag_63\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":4722:4725   */\n      dup3\n        /* \"#utility.yul\":4715:4752   */\n      mstore\n        /* \"#utility.yul\":4640:4758   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4764:4862   */\n    tag_79:\n        /* \"#utility.yul\":4815:4821   */\n      0x00\n        /* \"#utility.yul\":4849:4854   */\n      dup2\n        /* \"#utility.yul\":4843:4855   */\n      mload\n        /* \"#utility.yul\":4833:4855   */\n      swap1\n      pop\n        /* \"#utility.yul\":4764:4862   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4868:5036   */\n    tag_80:\n        /* \"#utility.yul\":4951:4962   */\n      0x00\n        /* \"#utility.yul\":4985:4991   */\n      dup3\n        /* \"#utility.yul\":4980:4983   */\n      dup3\n        /* \"#utility.yul\":4973:4992   */\n      mstore\n        /* \"#utility.yul\":5025:5029   */\n      0x20\n        /* \"#utility.yul\":5020:5023   */\n      dup3\n        /* \"#utility.yul\":5016:5030   */\n      add\n        /* \"#utility.yul\":5001:5030   */\n      swap1\n      pop\n        /* \"#utility.yul\":4868:5036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5042:5288   */\n    tag_81:\n        /* \"#utility.yul\":5123:5124   */\n      0x00\n        /* \"#utility.yul\":5133:5246   */\n    tag_150:\n        /* \"#utility.yul\":5147:5153   */\n      dup4\n        /* \"#utility.yul\":5144:5145   */\n      dup2\n        /* \"#utility.yul\":5141:5154   */\n      lt\n        /* \"#utility.yul\":5133:5246   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":5232:5233   */\n      dup1\n        /* \"#utility.yul\":5227:5230   */\n      dup3\n        /* \"#utility.yul\":5223:5234   */\n      add\n        /* \"#utility.yul\":5217:5235   */\n      mload\n        /* \"#utility.yul\":5213:5214   */\n      dup2\n        /* \"#utility.yul\":5208:5211   */\n      dup5\n        /* \"#utility.yul\":5204:5215   */\n      add\n        /* \"#utility.yul\":5197:5236   */\n      mstore\n        /* \"#utility.yul\":5169:5171   */\n      0x20\n        /* \"#utility.yul\":5166:5167   */\n      dup2\n        /* \"#utility.yul\":5162:5172   */\n      add\n        /* \"#utility.yul\":5157:5172   */\n      swap1\n      pop\n        /* \"#utility.yul\":5133:5246   */\n      jump(tag_150)\n    tag_152:\n        /* \"#utility.yul\":5280:5281   */\n      0x00\n        /* \"#utility.yul\":5271:5277   */\n      dup5\n        /* \"#utility.yul\":5266:5269   */\n      dup5\n        /* \"#utility.yul\":5262:5278   */\n      add\n        /* \"#utility.yul\":5255:5282   */\n      mstore\n        /* \"#utility.yul\":5104:5288   */\n      pop\n        /* \"#utility.yul\":5042:5288   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5294:5667   */\n    tag_82:\n        /* \"#utility.yul\":5380:5383   */\n      0x00\n        /* \"#utility.yul\":5408:5446   */\n      tag_154\n        /* \"#utility.yul\":5440:5445   */\n      dup3\n        /* \"#utility.yul\":5408:5446   */\n      tag_79\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":5462:5532   */\n      tag_155\n        /* \"#utility.yul\":5525:5531   */\n      dup2\n        /* \"#utility.yul\":5520:5523   */\n      dup6\n        /* \"#utility.yul\":5462:5532   */\n      tag_80\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":5455:5532   */\n      swap4\n      pop\n        /* \"#utility.yul\":5541:5606   */\n      tag_156\n        /* \"#utility.yul\":5599:5605   */\n      dup2\n        /* \"#utility.yul\":5594:5597   */\n      dup6\n        /* \"#utility.yul\":5587:5591   */\n      0x20\n        /* \"#utility.yul\":5580:5585   */\n      dup7\n        /* \"#utility.yul\":5576:5592   */\n      add\n        /* \"#utility.yul\":5541:5606   */\n      tag_81\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":5631:5660   */\n      tag_157\n        /* \"#utility.yul\":5653:5659   */\n      dup2\n        /* \"#utility.yul\":5631:5660   */\n      tag_68\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":5626:5629   */\n      dup5\n        /* \"#utility.yul\":5622:5661   */\n      add\n        /* \"#utility.yul\":5615:5661   */\n      swap2\n      pop\n        /* \"#utility.yul\":5384:5667   */\n      pop\n        /* \"#utility.yul\":5294:5667   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5673:6092   */\n    tag_23:\n        /* \"#utility.yul\":5812:5816   */\n      0x00\n        /* \"#utility.yul\":5850:5852   */\n      0x40\n        /* \"#utility.yul\":5839:5848   */\n      dup3\n        /* \"#utility.yul\":5835:5853   */\n      add\n        /* \"#utility.yul\":5827:5853   */\n      swap1\n      pop\n        /* \"#utility.yul\":5863:5934   */\n      tag_159\n        /* \"#utility.yul\":5931:5932   */\n      0x00\n        /* \"#utility.yul\":5920:5929   */\n      dup4\n        /* \"#utility.yul\":5916:5933   */\n      add\n        /* \"#utility.yul\":5907:5913   */\n      dup6\n        /* \"#utility.yul\":5863:5934   */\n      tag_78\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":5981:5990   */\n      dup2\n        /* \"#utility.yul\":5975:5979   */\n      dup2\n        /* \"#utility.yul\":5971:5991   */\n      sub\n        /* \"#utility.yul\":5966:5968   */\n      0x20\n        /* \"#utility.yul\":5955:5964   */\n      dup4\n        /* \"#utility.yul\":5951:5969   */\n      add\n        /* \"#utility.yul\":5944:5992   */\n      mstore\n        /* \"#utility.yul\":6009:6085   */\n      tag_160\n        /* \"#utility.yul\":6080:6084   */\n      dup2\n        /* \"#utility.yul\":6071:6077   */\n      dup5\n        /* \"#utility.yul\":6009:6085   */\n      tag_82\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":6001:6085   */\n      swap1\n      pop\n        /* \"#utility.yul\":5673:6092   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6098:6245   */\n    tag_83:\n        /* \"#utility.yul\":6199:6210   */\n      0x00\n        /* \"#utility.yul\":6236:6239   */\n      dup2\n        /* \"#utility.yul\":6221:6239   */\n      swap1\n      pop\n        /* \"#utility.yul\":6098:6245   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6251:6637   */\n    tag_84:\n        /* \"#utility.yul\":6355:6358   */\n      0x00\n        /* \"#utility.yul\":6383:6421   */\n      tag_163\n        /* \"#utility.yul\":6415:6420   */\n      dup3\n        /* \"#utility.yul\":6383:6421   */\n      tag_79\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":6437:6525   */\n      tag_164\n        /* \"#utility.yul\":6518:6524   */\n      dup2\n        /* \"#utility.yul\":6513:6516   */\n      dup6\n        /* \"#utility.yul\":6437:6525   */\n      tag_83\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":6430:6525   */\n      swap4\n      pop\n        /* \"#utility.yul\":6534:6599   */\n      tag_165\n        /* \"#utility.yul\":6592:6598   */\n      dup2\n        /* \"#utility.yul\":6587:6590   */\n      dup6\n        /* \"#utility.yul\":6580:6584   */\n      0x20\n        /* \"#utility.yul\":6573:6578   */\n      dup7\n        /* \"#utility.yul\":6569:6585   */\n      add\n        /* \"#utility.yul\":6534:6599   */\n      tag_81\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":6624:6630   */\n      dup1\n        /* \"#utility.yul\":6619:6622   */\n      dup5\n        /* \"#utility.yul\":6615:6631   */\n      add\n        /* \"#utility.yul\":6608:6631   */\n      swap2\n      pop\n        /* \"#utility.yul\":6359:6637   */\n      pop\n        /* \"#utility.yul\":6251:6637   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6643:6914   */\n    tag_25:\n        /* \"#utility.yul\":6773:6776   */\n      0x00\n        /* \"#utility.yul\":6795:6888   */\n      tag_167\n        /* \"#utility.yul\":6884:6887   */\n      dup3\n        /* \"#utility.yul\":6875:6881   */\n      dup5\n        /* \"#utility.yul\":6795:6888   */\n      tag_84\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":6788:6888   */\n      swap2\n      pop\n        /* \"#utility.yul\":6905:6908   */\n      dup2\n        /* \"#utility.yul\":6898:6908   */\n      swap1\n      pop\n        /* \"#utility.yul\":6643:6914   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6920:7063   */\n    tag_85:\n        /* \"#utility.yul\":6977:6982   */\n      0x00\n        /* \"#utility.yul\":7008:7014   */\n      dup2\n        /* \"#utility.yul\":7002:7015   */\n      mload\n        /* \"#utility.yul\":6993:7015   */\n      swap1\n      pop\n        /* \"#utility.yul\":7024:7057   */\n      tag_169\n        /* \"#utility.yul\":7051:7056   */\n      dup2\n        /* \"#utility.yul\":7024:7057   */\n      tag_64\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":6920:7063   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7069:7420   */\n    tag_32:\n        /* \"#utility.yul\":7139:7145   */\n      0x00\n        /* \"#utility.yul\":7188:7190   */\n      0x20\n        /* \"#utility.yul\":7176:7185   */\n      dup3\n        /* \"#utility.yul\":7167:7174   */\n      dup5\n        /* \"#utility.yul\":7163:7186   */\n      sub\n        /* \"#utility.yul\":7159:7191   */\n      slt\n        /* \"#utility.yul\":7156:7275   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":7194:7273   */\n      tag_172\n      tag_57\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":7156:7275   */\n    tag_171:\n        /* \"#utility.yul\":7314:7315   */\n      0x00\n        /* \"#utility.yul\":7339:7403   */\n      tag_173\n        /* \"#utility.yul\":7395:7402   */\n      dup5\n        /* \"#utility.yul\":7386:7392   */\n      dup3\n        /* \"#utility.yul\":7375:7384   */\n      dup6\n        /* \"#utility.yul\":7371:7393   */\n      add\n        /* \"#utility.yul\":7339:7403   */\n      tag_85\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":7329:7403   */\n      swap2\n      pop\n        /* \"#utility.yul\":7285:7413   */\n      pop\n        /* \"#utility.yul\":7069:7420   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7426:7606   */\n    tag_38:\n        /* \"#utility.yul\":7474:7551   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7471:7472   */\n      0x00\n        /* \"#utility.yul\":7464:7552   */\n      mstore\n        /* \"#utility.yul\":7571:7575   */\n      0x21\n        /* \"#utility.yul\":7568:7569   */\n      0x04\n        /* \"#utility.yul\":7561:7576   */\n      mstore\n        /* \"#utility.yul\":7595:7599   */\n      0x24\n        /* \"#utility.yul\":7592:7593   */\n      0x00\n        /* \"#utility.yul\":7585:7600   */\n      revert\n        /* \"#utility.yul\":7612:7698   */\n    tag_86:\n        /* \"#utility.yul\":7647:7654   */\n      0x00\n        /* \"#utility.yul\":7687:7691   */\n      0xff\n        /* \"#utility.yul\":7680:7685   */\n      dup3\n        /* \"#utility.yul\":7676:7692   */\n      and\n        /* \"#utility.yul\":7665:7692   */\n      swap1\n      pop\n        /* \"#utility.yul\":7612:7698   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7704:7816   */\n    tag_87:\n        /* \"#utility.yul\":7787:7809   */\n      tag_177\n        /* \"#utility.yul\":7803:7808   */\n      dup2\n        /* \"#utility.yul\":7787:7809   */\n      tag_86\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":7782:7785   */\n      dup3\n        /* \"#utility.yul\":7775:7810   */\n      mstore\n        /* \"#utility.yul\":7704:7816   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7822:8367   */\n    tag_52:\n        /* \"#utility.yul\":7995:7999   */\n      0x00\n        /* \"#utility.yul\":8033:8036   */\n      0x80\n        /* \"#utility.yul\":8022:8031   */\n      dup3\n        /* \"#utility.yul\":8018:8037   */\n      add\n        /* \"#utility.yul\":8010:8037   */\n      swap1\n      pop\n        /* \"#utility.yul\":8047:8118   */\n      tag_179\n        /* \"#utility.yul\":8115:8116   */\n      0x00\n        /* \"#utility.yul\":8104:8113   */\n      dup4\n        /* \"#utility.yul\":8100:8117   */\n      add\n        /* \"#utility.yul\":8091:8097   */\n      dup8\n        /* \"#utility.yul\":8047:8118   */\n      tag_78\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":8128:8196   */\n      tag_180\n        /* \"#utility.yul\":8192:8194   */\n      0x20\n        /* \"#utility.yul\":8181:8190   */\n      dup4\n        /* \"#utility.yul\":8177:8195   */\n      add\n        /* \"#utility.yul\":8168:8174   */\n      dup7\n        /* \"#utility.yul\":8128:8196   */\n      tag_87\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":8206:8278   */\n      tag_181\n        /* \"#utility.yul\":8274:8276   */\n      0x40\n        /* \"#utility.yul\":8263:8272   */\n      dup4\n        /* \"#utility.yul\":8259:8277   */\n      add\n        /* \"#utility.yul\":8250:8256   */\n      dup6\n        /* \"#utility.yul\":8206:8278   */\n      tag_78\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":8288:8360   */\n      tag_182\n        /* \"#utility.yul\":8356:8358   */\n      0x60\n        /* \"#utility.yul\":8345:8354   */\n      dup4\n        /* \"#utility.yul\":8341:8359   */\n      add\n        /* \"#utility.yul\":8332:8338   */\n      dup5\n        /* \"#utility.yul\":8288:8360   */\n      tag_78\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":7822:8367   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208e4bce124ce5b891472c704164710c20763e7eb99bd9a64749b4eff7b6b1547d64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5061082a8061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c8063235110ca14610038578063238a4d1e14610068575b5f80fd5b610052600480360381019061004d9190610584565b610098565b60405161005f919061060a565b60405180910390f35b610082600480360381019061007d9190610584565b6100ad565b60405161008f919061060a565b60405180910390f35b5f6100a48484846100c2565b90509392505050565b5f6100b98484846101e1565b90509392505050565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1685856040516024016100ef9291906106ac565b604051602081830303815290604052631626ba7e60e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516101419190610714565b5f60405180830381855afa9150503d805f8114610179576040519150601f19603f3d011682016040523d82523d5f602084013e61017e565b606091505b509150915081801561019257506020815110155b80156101d65750631626ba7e60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916818060200190518101906101d4919061073e565b145b925050509392505050565b5f805f6101ee858561026e565b50915091505f600381111561020657610205610769565b5b81600381111561021957610218610769565b5b14801561025157508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b8061026357506102628686866100c2565b5b925050509392505050565b5f805f60418451036102ae575f805f602087015192506040870151915060608701515f1a90506102a0888285856102c3565b9550955095505050506102bc565b5f600285515f1b9250925092505b9250925092565b5f805f7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0845f1c11156102ff575f6003859250925092506103a0565b5f6001888888886040515f815260200160405260405161032294939291906107b1565b6020604051602081039080840390855afa158015610342573d5f803e3d5ffd5b5050506020604051035190505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610393575f60015f801b935093509350506103a0565b805f805f1b935093509350505b9450945094915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103e4826103bb565b9050919050565b6103f4816103da565b81146103fe575f80fd5b50565b5f8135905061040f816103eb565b92915050565b5f819050919050565b61042781610415565b8114610431575f80fd5b50565b5f813590506104428161041e565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61049682610450565b810181811067ffffffffffffffff821117156104b5576104b4610460565b5b80604052505050565b5f6104c76103aa565b90506104d3828261048d565b919050565b5f67ffffffffffffffff8211156104f2576104f1610460565b5b6104fb82610450565b9050602081019050919050565b828183375f83830152505050565b5f610528610523846104d8565b6104be565b9050828152602081018484840111156105445761054361044c565b5b61054f848285610508565b509392505050565b5f82601f83011261056b5761056a610448565b5b813561057b848260208601610516565b91505092915050565b5f805f6060848603121561059b5761059a6103b3565b5b5f6105a886828701610401565b93505060206105b986828701610434565b925050604084013567ffffffffffffffff8111156105da576105d96103b7565b5b6105e686828701610557565b9150509250925092565b5f8115159050919050565b610604816105f0565b82525050565b5f60208201905061061d5f8301846105fb565b92915050565b61062c81610415565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561066957808201518184015260208101905061064e565b5f8484015250505050565b5f61067e82610632565b610688818561063c565b935061069881856020860161064c565b6106a181610450565b840191505092915050565b5f6040820190506106bf5f830185610623565b81810360208301526106d18184610674565b90509392505050565b5f81905092915050565b5f6106ee82610632565b6106f881856106da565b935061070881856020860161064c565b80840191505092915050565b5f61071f82846106e4565b915081905092915050565b5f815190506107388161041e565b92915050565b5f60208284031215610753576107526103b3565b5b5f6107608482850161072a565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f60ff82169050919050565b6107ab81610796565b82525050565b5f6080820190506107c45f830187610623565b6107d160208301866107a2565b6107de6040830185610623565b6107eb6060830184610623565b9594505050505056fea26469706673582212208e4bce124ce5b891472c704164710c20763e7eb99bd9a64749b4eff7b6b1547d64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x82A DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x235110CA EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0x238A4D1E EQ PUSH2 0x68 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x584 JUMP JUMPDEST PUSH2 0x98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F SWAP2 SWAP1 PUSH2 0x60A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7D SWAP2 SWAP1 PUSH2 0x584 JUMP JUMPDEST PUSH2 0xAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x60A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH2 0xA4 DUP5 DUP5 DUP5 PUSH2 0xC2 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB9 DUP5 DUP5 DUP5 PUSH2 0x1E1 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xEF SWAP3 SWAP2 SWAP1 PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH4 0x1626BA7E PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x714 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x179 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x17E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x192 JUMPI POP PUSH1 0x20 DUP2 MLOAD LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1D6 JUMPI POP PUSH4 0x1626BA7E PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x73E JUMP JUMPDEST EQ JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x1EE DUP6 DUP6 PUSH2 0x26E JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x206 JUMPI PUSH2 0x205 PUSH2 0x769 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x219 JUMPI PUSH2 0x218 PUSH2 0x769 JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0x251 JUMPI POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x263 JUMPI POP PUSH2 0x262 DUP7 DUP7 DUP7 PUSH2 0xC2 JUMP JUMPDEST JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x2AE JUMPI PUSH0 DUP1 PUSH0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH0 BYTE SWAP1 POP PUSH2 0x2A0 DUP9 DUP3 DUP6 DUP6 PUSH2 0x2C3 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x2BC JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP6 MLOAD PUSH0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH0 SHR GT ISZERO PUSH2 0x2FF JUMPI PUSH0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x3A0 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x322 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x342 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x393 JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x3A0 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3E4 DUP3 PUSH2 0x3BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F4 DUP2 PUSH2 0x3DA JUMP JUMPDEST DUP2 EQ PUSH2 0x3FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x40F DUP2 PUSH2 0x3EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x427 DUP2 PUSH2 0x415 JUMP JUMPDEST DUP2 EQ PUSH2 0x431 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x442 DUP2 PUSH2 0x41E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x496 DUP3 PUSH2 0x450 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x4B5 JUMPI PUSH2 0x4B4 PUSH2 0x460 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4C7 PUSH2 0x3AA JUMP JUMPDEST SWAP1 POP PUSH2 0x4D3 DUP3 DUP3 PUSH2 0x48D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4F2 JUMPI PUSH2 0x4F1 PUSH2 0x460 JUMP JUMPDEST JUMPDEST PUSH2 0x4FB DUP3 PUSH2 0x450 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x528 PUSH2 0x523 DUP5 PUSH2 0x4D8 JUMP JUMPDEST PUSH2 0x4BE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x544 JUMPI PUSH2 0x543 PUSH2 0x44C JUMP JUMPDEST JUMPDEST PUSH2 0x54F DUP5 DUP3 DUP6 PUSH2 0x508 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x56B JUMPI PUSH2 0x56A PUSH2 0x448 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x57B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x516 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x59B JUMPI PUSH2 0x59A PUSH2 0x3B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5A8 DUP7 DUP3 DUP8 ADD PUSH2 0x401 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x5B9 DUP7 DUP3 DUP8 ADD PUSH2 0x434 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5DA JUMPI PUSH2 0x5D9 PUSH2 0x3B7 JUMP JUMPDEST JUMPDEST PUSH2 0x5E6 DUP7 DUP3 DUP8 ADD PUSH2 0x557 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x604 DUP2 PUSH2 0x5F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x61D PUSH0 DUP4 ADD DUP5 PUSH2 0x5FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x62C DUP2 PUSH2 0x415 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x669 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x64E JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x67E DUP3 PUSH2 0x632 JUMP JUMPDEST PUSH2 0x688 DUP2 DUP6 PUSH2 0x63C JUMP JUMPDEST SWAP4 POP PUSH2 0x698 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x64C JUMP JUMPDEST PUSH2 0x6A1 DUP2 PUSH2 0x450 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x6BF PUSH0 DUP4 ADD DUP6 PUSH2 0x623 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x6D1 DUP2 DUP5 PUSH2 0x674 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6EE DUP3 PUSH2 0x632 JUMP JUMPDEST PUSH2 0x6F8 DUP2 DUP6 PUSH2 0x6DA JUMP JUMPDEST SWAP4 POP PUSH2 0x708 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x64C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x71F DUP3 DUP5 PUSH2 0x6E4 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x738 DUP2 PUSH2 0x41E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x753 JUMPI PUSH2 0x752 PUSH2 0x3B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x760 DUP5 DUP3 DUP6 ADD PUSH2 0x72A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7AB DUP2 PUSH2 0x796 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x7C4 PUSH0 DUP4 ADD DUP8 PUSH2 0x623 JUMP JUMPDEST PUSH2 0x7D1 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x7A2 JUMP JUMPDEST PUSH2 0x7DE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x623 JUMP JUMPDEST PUSH2 0x7EB PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x623 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 0x4B 0xCE SLT 0x4C 0xE5 0xB8 SWAP2 SELFBALANCE 0x2C PUSH17 0x4164710C20763E7EB99BD9A64749B4EFF7 0xB6 0xB1 SLOAD PUSH30 0x64736F6C6343000814003300000000000000000000000000000000000000 ",
							"sourceMap": "132:435:3:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@isValidERC1271SignatureNow_461": {
									"entryPoint": 194,
									"id": 461,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isValidERC1271Signature_484": {
									"entryPoint": 152,
									"id": 484,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isValidSignatureNow_409": {
									"entryPoint": 481,
									"id": 409,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isValidSignature_503": {
									"entryPoint": 173,
									"id": 503,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@tryRecover_275": {
									"entryPoint": 707,
									"id": 275,
									"parameterSlots": 4,
									"returnSlots": 3
								},
								"@tryRecover_87": {
									"entryPoint": 622,
									"id": 87,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 1302,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 1076,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32_fromMemory": {
									"entryPoint": 1834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 1367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes32t_bytes_memory_ptr": {
									"entryPoint": 1412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 1854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 1571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 1652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 1954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 1708,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": 1969,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 938,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 1240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 1586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 1596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1520,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 1045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 1942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 1288,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1612,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 1165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 1897,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1120,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1096,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1100,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 951,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 947,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 1003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 1054,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8370:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:4",
														"type": ""
													}
												],
												"src": "696:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:4",
														"type": ""
													}
												],
												"src": "841:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:4"
															},
															"nodeType": "YulIf",
															"src": "977:63:4"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:4",
														"type": ""
													}
												],
												"src": "924:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:4"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:4",
														"type": ""
													}
												],
												"src": "1052:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1286:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1303:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1306:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1296:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1296:12:4"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "1197:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1409:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1426:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1419:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1419:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1419:12:4"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "1320:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1491:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1501:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1519:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1526:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1515:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1515:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1535:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1531:7:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1511:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1511:28:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:4"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1474:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1484:6:4",
														"type": ""
													}
												],
												"src": "1443:102:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1579:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1596:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1599:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1589:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1589:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1693:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1696:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1686:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1686:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1717:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1720:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1710:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1710:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1710:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1551:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1780:238:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1790:58:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1812:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "1842:4:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1820:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1820:27:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1808:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1808:40:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1794:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1959:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1961:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1961:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1961:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1902:10:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1914:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1899:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1899:34:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1938:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1950:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1935:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1896:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1896:62:4"
															},
															"nodeType": "YulIf",
															"src": "1893:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1997:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2001:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1990:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1990:22:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1990:22:4"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1766:6:4",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1774:4:4",
														"type": ""
													}
												],
												"src": "1737:281:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2065:88:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2075:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "2085:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2085:20:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2075:6:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2134:6:4"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2142:4:4"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2114:19:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2114:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2114:33:4"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2049:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2058:6:4",
														"type": ""
													}
												],
												"src": "2024:129:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2225:241:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2330:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2332:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2332:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2332:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2302:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2310:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2299:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2299:30:4"
															},
															"nodeType": "YulIf",
															"src": "2296:56:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2362:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2392:6:4"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "2370:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2370:29:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2362:4:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2436:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2448:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2454:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2444:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2444:15:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2436:4:4"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2209:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2220:4:4",
														"type": ""
													}
												],
												"src": "2159:307:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2536:82:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2559:3:4"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2564:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2569:6:4"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2546:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2546:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2546:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2596:3:4"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2601:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2592:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2592:16:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2610:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2585:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2585:27:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2585:27:4"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2518:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2523:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2528:6:4",
														"type": ""
													}
												],
												"src": "2472:146:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2707:340:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2717:74:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2783:6:4"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2742:40:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2742:48:4"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2726:15:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2726:65:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2717:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2807:5:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2814:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2800:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2800:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2800:21:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2830:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2845:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2852:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2841:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2841:16:4"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2834:3:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2895:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2897:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2897:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2897:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2876:3:4"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2881:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2872:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2872:16:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2890:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2869:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2869:25:4"
															},
															"nodeType": "YulIf",
															"src": "2866:112:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3024:3:4"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3029:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3034:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2987:36:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2987:54:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2987:54:4"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2680:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2685:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2693:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2701:5:4",
														"type": ""
													}
												],
												"src": "2624:423:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3127:277:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3176:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "3178:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3178:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3178:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3155:6:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3163:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3151:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3151:17:4"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3170:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3147:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3147:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3140:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3140:35:4"
															},
															"nodeType": "YulIf",
															"src": "3137:122:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3268:34:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3295:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3282:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3282:20:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3272:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3311:87:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3371:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3379:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3367:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3367:17:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3386:6:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3394:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3320:46:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3320:78:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3311:5:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3105:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3113:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3121:5:4",
														"type": ""
													}
												],
												"src": "3066:338:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3519:688:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3565:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3567:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3567:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3567:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3540:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3549:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3536:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3536:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3561:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3532:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3532:32:4"
															},
															"nodeType": "YulIf",
															"src": "3529:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "3658:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3673:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3687:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3677:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3702:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3737:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3748:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3733:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3733:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3757:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3712:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3712:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3702:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3785:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3800:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3814:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3804:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3830:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3865:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3876:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3861:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3861:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3885:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "3840:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3840:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3830:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3913:287:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3928:46:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3959:9:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3970:2:4",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3955:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3955:18:4"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3942:12:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3942:32:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3932:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4021:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4023:77:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4023:79:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4023:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3993:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4001:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3990:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3990:30:4"
																	},
																	"nodeType": "YulIf",
																	"src": "3987:117:4"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4118:72:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4162:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4173:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4158:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4158:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4182:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4128:29:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4128:62:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4118:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes32t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3473:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3484:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3496:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3504:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3512:6:4",
														"type": ""
													}
												],
												"src": "3410:797:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4255:48:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4265:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4290:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4283:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4283:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4276:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4276:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4265:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4237:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4247:7:4",
														"type": ""
													}
												],
												"src": "4213:90:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4368:50:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4385:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4405:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "4390:14:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4390:21:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4378:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4378:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4378:34:4"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4356:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4363:3:4",
														"type": ""
													}
												],
												"src": "4309:109:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4516:118:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4526:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4538:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4549:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4534:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4534:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4526:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4600:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4613:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4624:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4609:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4609:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4562:37:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4562:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4562:65:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4488:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4500:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4511:4:4",
														"type": ""
													}
												],
												"src": "4424:210:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4705:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4722:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4745:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "4727:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4727:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4715:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4715:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4715:37:4"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4693:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4700:3:4",
														"type": ""
													}
												],
												"src": "4640:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4822:40:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4833:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4849:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4843:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4843:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4833:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4805:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4815:6:4",
														"type": ""
													}
												],
												"src": "4764:98:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4963:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4980:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4985:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4973:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4973:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4973:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5001:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5020:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5025:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5016:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5016:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5001:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4935:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4940:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4951:11:4",
														"type": ""
													}
												],
												"src": "4868:168:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5104:184:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5114:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5123:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "5118:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5183:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "5208:3:4"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "5213:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5204:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5204:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "5227:3:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "5232:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5223:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5223:11:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5217:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5217:18:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5197:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5197:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5197:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5144:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5147:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5141:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5141:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5155:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5157:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5166:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5169:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5162:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5162:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5157:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5137:3:4",
																"statements": []
															},
															"src": "5133:113:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "5266:3:4"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5271:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5262:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5262:16:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5280:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5255:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5255:27:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5255:27:4"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5086:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "5091:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5096:6:4",
														"type": ""
													}
												],
												"src": "5042:246:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5384:283:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5394:52:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5440:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5408:31:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5408:38:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5398:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5455:77:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5520:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5525:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5462:57:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5462:70:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5455:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5580:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5587:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5576:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5576:16:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5594:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5599:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "5541:34:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5541:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5541:65:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5615:46:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5626:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5653:6:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "5631:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5631:29:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5622:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5622:39:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5615:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5365:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5372:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5380:3:4",
														"type": ""
													}
												],
												"src": "5294:373:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5817:275:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5827:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5839:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5850:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5835:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5835:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5827:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5907:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5920:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5931:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5916:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5916:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5863:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5863:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5863:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5955:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5966:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5951:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5951:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5975:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5981:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5971:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5971:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5944:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5944:48:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5944:48:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6001:84:4",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6071:6:4"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6080:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6009:61:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6009:76:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6001:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5781:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5793:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5801:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5812:4:4",
														"type": ""
													}
												],
												"src": "5673:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6211:34:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6221:18:4",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6236:3:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6221:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6183:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6188:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6199:11:4",
														"type": ""
													}
												],
												"src": "6098:147:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6359:278:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6369:52:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6415:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6383:31:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6383:38:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6373:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6430:95:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6513:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6518:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6437:75:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6437:88:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6430:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6573:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6580:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6569:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6569:16:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6587:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6592:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "6534:34:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6534:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6534:65:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6608:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6619:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6624:6:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6615:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6615:16:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6608:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6340:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6347:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6355:3:4",
														"type": ""
													}
												],
												"src": "6251:386:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6777:137:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6788:100:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6875:6:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6884:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6795:79:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6795:93:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6788:3:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6898:10:4",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6905:3:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6898:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6756:3:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6762:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6773:3:4",
														"type": ""
													}
												],
												"src": "6643:271:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6983:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6993:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7008:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7002:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7002:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6993:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7051:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "7024:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7024:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7024:33:4"
														}
													]
												},
												"name": "abi_decode_t_bytes32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6961:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6969:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6977:5:4",
														"type": ""
													}
												],
												"src": "6920:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7146:274:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7192:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7194:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7194:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7194:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7167:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7176:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7163:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7163:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7188:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7159:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7159:32:4"
															},
															"nodeType": "YulIf",
															"src": "7156:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "7285:128:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7300:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7314:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7304:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7329:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7375:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7386:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7371:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7371:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7395:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7339:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7339:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7329:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7116:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7127:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7139:6:4",
														"type": ""
													}
												],
												"src": "7069:351:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7454:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7471:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7474:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7464:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7464:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7464:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7568:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7571:4:4",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7561:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7561:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7561:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7592:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7595:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7585:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7585:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7585:15:4"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "7426:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7655:43:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7665:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7680:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7687:4:4",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7676:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7676:16:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7665:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7637:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7647:7:4",
														"type": ""
													}
												],
												"src": "7612:86:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7765:51:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7782:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7803:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "7787:15:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7787:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7775:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7775:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7775:35:4"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7753:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7760:3:4",
														"type": ""
													}
												],
												"src": "7704:112:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8000:367:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8010:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8022:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8033:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8018:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8018:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8010:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8091:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8104:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8115:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8100:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8100:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8047:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8047:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8047:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8168:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8181:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8192:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8177:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8177:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8128:39:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8128:68:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8128:68:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8250:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8263:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8274:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8259:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8259:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8206:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8206:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8206:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8332:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8345:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8356:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8341:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8341:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8288:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8288:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8288:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7948:9:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7960:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7968:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7976:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7984:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7995:4:4",
														"type": ""
													}
												],
												"src": "7822:545:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610034575f3560e01c8063235110ca14610038578063238a4d1e14610068575b5f80fd5b610052600480360381019061004d9190610584565b610098565b60405161005f919061060a565b60405180910390f35b610082600480360381019061007d9190610584565b6100ad565b60405161008f919061060a565b60405180910390f35b5f6100a48484846100c2565b90509392505050565b5f6100b98484846101e1565b90509392505050565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1685856040516024016100ef9291906106ac565b604051602081830303815290604052631626ba7e60e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516101419190610714565b5f60405180830381855afa9150503d805f8114610179576040519150601f19603f3d011682016040523d82523d5f602084013e61017e565b606091505b509150915081801561019257506020815110155b80156101d65750631626ba7e60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916818060200190518101906101d4919061073e565b145b925050509392505050565b5f805f6101ee858561026e565b50915091505f600381111561020657610205610769565b5b81600381111561021957610218610769565b5b14801561025157508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b8061026357506102628686866100c2565b5b925050509392505050565b5f805f60418451036102ae575f805f602087015192506040870151915060608701515f1a90506102a0888285856102c3565b9550955095505050506102bc565b5f600285515f1b9250925092505b9250925092565b5f805f7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0845f1c11156102ff575f6003859250925092506103a0565b5f6001888888886040515f815260200160405260405161032294939291906107b1565b6020604051602081039080840390855afa158015610342573d5f803e3d5ffd5b5050506020604051035190505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610393575f60015f801b935093509350506103a0565b805f805f1b935093509350505b9450945094915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103e4826103bb565b9050919050565b6103f4816103da565b81146103fe575f80fd5b50565b5f8135905061040f816103eb565b92915050565b5f819050919050565b61042781610415565b8114610431575f80fd5b50565b5f813590506104428161041e565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61049682610450565b810181811067ffffffffffffffff821117156104b5576104b4610460565b5b80604052505050565b5f6104c76103aa565b90506104d3828261048d565b919050565b5f67ffffffffffffffff8211156104f2576104f1610460565b5b6104fb82610450565b9050602081019050919050565b828183375f83830152505050565b5f610528610523846104d8565b6104be565b9050828152602081018484840111156105445761054361044c565b5b61054f848285610508565b509392505050565b5f82601f83011261056b5761056a610448565b5b813561057b848260208601610516565b91505092915050565b5f805f6060848603121561059b5761059a6103b3565b5b5f6105a886828701610401565b93505060206105b986828701610434565b925050604084013567ffffffffffffffff8111156105da576105d96103b7565b5b6105e686828701610557565b9150509250925092565b5f8115159050919050565b610604816105f0565b82525050565b5f60208201905061061d5f8301846105fb565b92915050565b61062c81610415565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561066957808201518184015260208101905061064e565b5f8484015250505050565b5f61067e82610632565b610688818561063c565b935061069881856020860161064c565b6106a181610450565b840191505092915050565b5f6040820190506106bf5f830185610623565b81810360208301526106d18184610674565b90509392505050565b5f81905092915050565b5f6106ee82610632565b6106f881856106da565b935061070881856020860161064c565b80840191505092915050565b5f61071f82846106e4565b915081905092915050565b5f815190506107388161041e565b92915050565b5f60208284031215610753576107526103b3565b5b5f6107608482850161072a565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f60ff82169050919050565b6107ab81610796565b82525050565b5f6080820190506107c45f830187610623565b6107d160208301866107a2565b6107de6040830185610623565b6107eb6060830184610623565b9594505050505056fea26469706673582212208e4bce124ce5b891472c704164710c20763e7eb99bd9a64749b4eff7b6b1547d64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x235110CA EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0x238A4D1E EQ PUSH2 0x68 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x584 JUMP JUMPDEST PUSH2 0x98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F SWAP2 SWAP1 PUSH2 0x60A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7D SWAP2 SWAP1 PUSH2 0x584 JUMP JUMPDEST PUSH2 0xAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x60A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH2 0xA4 DUP5 DUP5 DUP5 PUSH2 0xC2 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB9 DUP5 DUP5 DUP5 PUSH2 0x1E1 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xEF SWAP3 SWAP2 SWAP1 PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH4 0x1626BA7E PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x714 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x179 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x17E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x192 JUMPI POP PUSH1 0x20 DUP2 MLOAD LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1D6 JUMPI POP PUSH4 0x1626BA7E PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x73E JUMP JUMPDEST EQ JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x1EE DUP6 DUP6 PUSH2 0x26E JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x206 JUMPI PUSH2 0x205 PUSH2 0x769 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x219 JUMPI PUSH2 0x218 PUSH2 0x769 JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0x251 JUMPI POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x263 JUMPI POP PUSH2 0x262 DUP7 DUP7 DUP7 PUSH2 0xC2 JUMP JUMPDEST JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x2AE JUMPI PUSH0 DUP1 PUSH0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH0 BYTE SWAP1 POP PUSH2 0x2A0 DUP9 DUP3 DUP6 DUP6 PUSH2 0x2C3 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x2BC JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP6 MLOAD PUSH0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH0 SHR GT ISZERO PUSH2 0x2FF JUMPI PUSH0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x3A0 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x322 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x342 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x393 JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x3A0 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3E4 DUP3 PUSH2 0x3BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F4 DUP2 PUSH2 0x3DA JUMP JUMPDEST DUP2 EQ PUSH2 0x3FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x40F DUP2 PUSH2 0x3EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x427 DUP2 PUSH2 0x415 JUMP JUMPDEST DUP2 EQ PUSH2 0x431 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x442 DUP2 PUSH2 0x41E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x496 DUP3 PUSH2 0x450 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x4B5 JUMPI PUSH2 0x4B4 PUSH2 0x460 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4C7 PUSH2 0x3AA JUMP JUMPDEST SWAP1 POP PUSH2 0x4D3 DUP3 DUP3 PUSH2 0x48D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4F2 JUMPI PUSH2 0x4F1 PUSH2 0x460 JUMP JUMPDEST JUMPDEST PUSH2 0x4FB DUP3 PUSH2 0x450 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x528 PUSH2 0x523 DUP5 PUSH2 0x4D8 JUMP JUMPDEST PUSH2 0x4BE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x544 JUMPI PUSH2 0x543 PUSH2 0x44C JUMP JUMPDEST JUMPDEST PUSH2 0x54F DUP5 DUP3 DUP6 PUSH2 0x508 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x56B JUMPI PUSH2 0x56A PUSH2 0x448 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x57B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x516 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x59B JUMPI PUSH2 0x59A PUSH2 0x3B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5A8 DUP7 DUP3 DUP8 ADD PUSH2 0x401 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x5B9 DUP7 DUP3 DUP8 ADD PUSH2 0x434 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5DA JUMPI PUSH2 0x5D9 PUSH2 0x3B7 JUMP JUMPDEST JUMPDEST PUSH2 0x5E6 DUP7 DUP3 DUP8 ADD PUSH2 0x557 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x604 DUP2 PUSH2 0x5F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x61D PUSH0 DUP4 ADD DUP5 PUSH2 0x5FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x62C DUP2 PUSH2 0x415 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x669 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x64E JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x67E DUP3 PUSH2 0x632 JUMP JUMPDEST PUSH2 0x688 DUP2 DUP6 PUSH2 0x63C JUMP JUMPDEST SWAP4 POP PUSH2 0x698 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x64C JUMP JUMPDEST PUSH2 0x6A1 DUP2 PUSH2 0x450 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x6BF PUSH0 DUP4 ADD DUP6 PUSH2 0x623 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x6D1 DUP2 DUP5 PUSH2 0x674 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6EE DUP3 PUSH2 0x632 JUMP JUMPDEST PUSH2 0x6F8 DUP2 DUP6 PUSH2 0x6DA JUMP JUMPDEST SWAP4 POP PUSH2 0x708 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x64C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x71F DUP3 DUP5 PUSH2 0x6E4 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x738 DUP2 PUSH2 0x41E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x753 JUMPI PUSH2 0x752 PUSH2 0x3B3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x760 DUP5 DUP3 DUP6 ADD PUSH2 0x72A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7AB DUP2 PUSH2 0x796 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x7C4 PUSH0 DUP4 ADD DUP8 PUSH2 0x623 JUMP JUMPDEST PUSH2 0x7D1 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x7A2 JUMP JUMPDEST PUSH2 0x7DE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x623 JUMP JUMPDEST PUSH2 0x7EB PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x623 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 0x4B 0xCE SLT 0x4C 0xE5 0xB8 SWAP2 SELFBALANCE 0x2C PUSH17 0x4164710C20763E7EB99BD9A64749B4EFF7 0xB6 0xB1 SLOAD PUSH30 0x64736F6C6343000814003300000000000000000000000000000000000000 ",
							"sourceMap": "132:435:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;164:205;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;374:191;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;164:205;272:4;294:68;338:6;346:4;352:9;294:43;:68::i;:::-;287:75;;164:205;;;;;:::o;374:191::-;475:4;497:61;534:6;542:4;548:9;497:36;:61::i;:::-;490:68;;374:191;;;;;:::o;1813:458:2:-;1956:4;1973:12;1987:19;2010:6;:17;;2084:4;2090:9;2041:60;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2010:101;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1972:139;;;;2129:7;:42;;;;;2169:2;2152:6;:13;:19;;2129:42;:134;;;;;2228:34;;;2220:43;;;2198:6;2187:29;;;;;;;;;;;;:::i;:::-;:76;2129:134;2121:143;;;;1813:458;;;;;:::o;1039:368::-;1145:4;1162:17;1181:24;1211:33;1228:4;1234:9;1211:16;:33::i;:::-;1161:83;;;;;1283:26;1274:35;;;;;;;;:::i;:::-;;:5;:35;;;;;;;;:::i;:::-;;;:58;;;;;1326:6;1313:19;;:9;:19;;;1274:58;1273:127;;;;1349:51;1376:6;1384:4;1390:9;1349:26;:51::i;:::-;1273:127;1254:146;;;;1039:368;;;;;:::o;2129:766:1:-;2210:7;2219:12;2233:7;2276:2;2256:9;:16;:22;2252:637;;2294:9;2317;2340:7;2592:4;2581:9;2577:20;2571:27;2566:32;;2641:4;2630:9;2626:20;2620:27;2615:32;;2698:4;2687:9;2683:20;2677:27;2674:1;2669:36;2664:41;;2739:25;2750:4;2756:1;2759;2762;2739:10;:25::i;:::-;2732:32;;;;;;;;;;;2252:637;2811:1;2815:35;2860:9;:16;2852:25;;2795:83;;;;;;2129:766;;;;;;:::o;5140:1530::-;5266:7;5275:12;5289:7;6199:66;6194:1;6186:10;;:79;6182:164;;;6297:1;6301:30;6333:1;6281:54;;;;;;;;6182:164;6440:14;6457:24;6467:4;6473:1;6476;6479;6457:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6440:41;;6513:1;6495:20;;:6;:20;;;6491:113;;6547:1;6551:29;6590:1;6582:10;;6531:62;;;;;;;;;6491:113;6622:6;6630:20;6660:1;6652:10;;6614:49;;;;;;;5140:1530;;;;;;;;;:::o;7:75:4:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:117::-;1306:1;1303;1296:12;1320:117;1429:1;1426;1419:12;1443:102;1484:6;1535:2;1531:7;1526:2;1519:5;1515:14;1511:28;1501:38;;1443:102;;;:::o;1551:180::-;1599:77;1596:1;1589:88;1696:4;1693:1;1686:15;1720:4;1717:1;1710:15;1737:281;1820:27;1842:4;1820:27;:::i;:::-;1812:6;1808:40;1950:6;1938:10;1935:22;1914:18;1902:10;1899:34;1896:62;1893:88;;;1961:18;;:::i;:::-;1893:88;2001:10;1997:2;1990:22;1780:238;1737:281;;:::o;2024:129::-;2058:6;2085:20;;:::i;:::-;2075:30;;2114:33;2142:4;2134:6;2114:33;:::i;:::-;2024:129;;;:::o;2159:307::-;2220:4;2310:18;2302:6;2299:30;2296:56;;;2332:18;;:::i;:::-;2296:56;2370:29;2392:6;2370:29;:::i;:::-;2362:37;;2454:4;2448;2444:15;2436:23;;2159:307;;;:::o;2472:146::-;2569:6;2564:3;2559;2546:30;2610:1;2601:6;2596:3;2592:16;2585:27;2472:146;;;:::o;2624:423::-;2701:5;2726:65;2742:48;2783:6;2742:48;:::i;:::-;2726:65;:::i;:::-;2717:74;;2814:6;2807:5;2800:21;2852:4;2845:5;2841:16;2890:3;2881:6;2876:3;2872:16;2869:25;2866:112;;;2897:79;;:::i;:::-;2866:112;2987:54;3034:6;3029:3;3024;2987:54;:::i;:::-;2707:340;2624:423;;;;;:::o;3066:338::-;3121:5;3170:3;3163:4;3155:6;3151:17;3147:27;3137:122;;3178:79;;:::i;:::-;3137:122;3295:6;3282:20;3320:78;3394:3;3386:6;3379:4;3371:6;3367:17;3320:78;:::i;:::-;3311:87;;3127:277;3066:338;;;;:::o;3410:797::-;3496:6;3504;3512;3561:2;3549:9;3540:7;3536:23;3532:32;3529:119;;;3567:79;;:::i;:::-;3529:119;3687:1;3712:53;3757:7;3748:6;3737:9;3733:22;3712:53;:::i;:::-;3702:63;;3658:117;3814:2;3840:53;3885:7;3876:6;3865:9;3861:22;3840:53;:::i;:::-;3830:63;;3785:118;3970:2;3959:9;3955:18;3942:32;4001:18;3993:6;3990:30;3987:117;;;4023:79;;:::i;:::-;3987:117;4128:62;4182:7;4173:6;4162:9;4158:22;4128:62;:::i;:::-;4118:72;;3913:287;3410:797;;;;;:::o;4213:90::-;4247:7;4290:5;4283:13;4276:21;4265:32;;4213:90;;;:::o;4309:109::-;4390:21;4405:5;4390:21;:::i;:::-;4385:3;4378:34;4309:109;;:::o;4424:210::-;4511:4;4549:2;4538:9;4534:18;4526:26;;4562:65;4624:1;4613:9;4609:17;4600:6;4562:65;:::i;:::-;4424:210;;;;:::o;4640:118::-;4727:24;4745:5;4727:24;:::i;:::-;4722:3;4715:37;4640:118;;:::o;4764:98::-;4815:6;4849:5;4843:12;4833:22;;4764:98;;;:::o;4868:168::-;4951:11;4985:6;4980:3;4973:19;5025:4;5020:3;5016:14;5001:29;;4868:168;;;;:::o;5042:246::-;5123:1;5133:113;5147:6;5144:1;5141:13;5133:113;;;5232:1;5227:3;5223:11;5217:18;5213:1;5208:3;5204:11;5197:39;5169:2;5166:1;5162:10;5157:15;;5133:113;;;5280:1;5271:6;5266:3;5262:16;5255:27;5104:184;5042:246;;;:::o;5294:373::-;5380:3;5408:38;5440:5;5408:38;:::i;:::-;5462:70;5525:6;5520:3;5462:70;:::i;:::-;5455:77;;5541:65;5599:6;5594:3;5587:4;5580:5;5576:16;5541:65;:::i;:::-;5631:29;5653:6;5631:29;:::i;:::-;5626:3;5622:39;5615:46;;5384:283;5294:373;;;;:::o;5673:419::-;5812:4;5850:2;5839:9;5835:18;5827:26;;5863:71;5931:1;5920:9;5916:17;5907:6;5863:71;:::i;:::-;5981:9;5975:4;5971:20;5966:2;5955:9;5951:18;5944:48;6009:76;6080:4;6071:6;6009:76;:::i;:::-;6001:84;;5673:419;;;;;:::o;6098:147::-;6199:11;6236:3;6221:18;;6098:147;;;;:::o;6251:386::-;6355:3;6383:38;6415:5;6383:38;:::i;:::-;6437:88;6518:6;6513:3;6437:88;:::i;:::-;6430:95;;6534:65;6592:6;6587:3;6580:4;6573:5;6569:16;6534:65;:::i;:::-;6624:6;6619:3;6615:16;6608:23;;6359:278;6251:386;;;;:::o;6643:271::-;6773:3;6795:93;6884:3;6875:6;6795:93;:::i;:::-;6788:100;;6905:3;6898:10;;6643:271;;;;:::o;6920:143::-;6977:5;7008:6;7002:13;6993:22;;7024:33;7051:5;7024:33;:::i;:::-;6920:143;;;;:::o;7069:351::-;7139:6;7188:2;7176:9;7167:7;7163:23;7159:32;7156:119;;;7194:79;;:::i;:::-;7156:119;7314:1;7339:64;7395:7;7386:6;7375:9;7371:22;7339:64;:::i;:::-;7329:74;;7285:128;7069:351;;;;:::o;7426:180::-;7474:77;7471:1;7464:88;7571:4;7568:1;7561:15;7595:4;7592:1;7585:15;7612:86;7647:7;7687:4;7680:5;7676:16;7665:27;;7612:86;;;:::o;7704:112::-;7787:22;7803:5;7787:22;:::i;:::-;7782:3;7775:35;7704:112;;:::o;7822:545::-;7995:4;8033:3;8022:9;8018:19;8010:27;;8047:71;8115:1;8104:9;8100:17;8091:6;8047:71;:::i;:::-;8128:68;8192:2;8181:9;8177:18;8168:6;8128:68;:::i;:::-;8206:72;8274:2;8263:9;8259:18;8250:6;8206:72;:::i;:::-;8288;8356:2;8345:9;8341:18;8332:6;8288:72;:::i;:::-;7822:545;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "418000",
								"executionCost": "453",
								"totalCost": "418453"
							},
							"external": {
								"isValidERC1271Signature(address,bytes32,bytes)": "infinite",
								"isValidSignature(address,bytes32,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 132,
									"end": 567,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 132,
									"end": 567,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 132,
									"end": 567,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 132,
									"end": 567,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 132,
									"end": 567,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 132,
									"end": 567,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 132,
									"end": 567,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 132,
									"end": 567,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 132,
									"end": 567,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 567,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 132,
									"end": 567,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 132,
									"end": 567,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 132,
									"end": 567,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 132,
									"end": 567,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 132,
									"end": 567,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 567,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 132,
									"end": 567,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 567,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 567,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 132,
									"end": 567,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 567,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208e4bce124ce5b891472c704164710c20763e7eb99bd9a64749b4eff7b6b1547d64736f6c63430008140033",
									".code": [
										{
											"begin": 132,
											"end": 567,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 132,
											"end": 567,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 132,
											"end": 567,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 132,
											"end": 567,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 132,
											"end": 567,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 132,
											"end": 567,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 132,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 132,
											"end": 567,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 132,
											"end": 567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 567,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 132,
											"end": 567,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 132,
											"end": 567,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 132,
											"end": 567,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 132,
											"end": 567,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 132,
											"end": 567,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 132,
											"end": 567,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 132,
											"end": 567,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 132,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 132,
											"end": 567,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 132,
											"end": 567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 567,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 132,
											"end": 567,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 132,
											"end": 567,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 132,
											"end": 567,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 132,
											"end": 567,
											"name": "PUSH",
											"source": 3,
											"value": "235110CA"
										},
										{
											"begin": 132,
											"end": 567,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 132,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 132,
											"end": 567,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 132,
											"end": 567,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 132,
											"end": 567,
											"name": "PUSH",
											"source": 3,
											"value": "238A4D1E"
										},
										{
											"begin": 132,
											"end": 567,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 132,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 132,
											"end": 567,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 132,
											"end": 567,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 132,
											"end": 567,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 132,
											"end": 567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 567,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 132,
											"end": 567,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 164,
											"end": 369,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 164,
											"end": 369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 164,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 164,
											"end": 369,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 164,
											"end": 369,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 164,
											"end": 369,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 164,
											"end": 369,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 164,
											"end": 369,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 164,
											"end": 369,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 164,
											"end": 369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 164,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 164,
											"end": 369,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 164,
											"end": 369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 164,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 164,
											"end": 369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 164,
											"end": 369,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 164,
											"end": 369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 164,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 164,
											"end": 369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 164,
											"end": 369,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 164,
											"end": 369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 164,
											"end": 369,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 164,
											"end": 369,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 164,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 164,
											"end": 369,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 164,
											"end": 369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 164,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 164,
											"end": 369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 164,
											"end": 369,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 164,
											"end": 369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 164,
											"end": 369,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 164,
											"end": 369,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 164,
											"end": 369,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 164,
											"end": 369,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 164,
											"end": 369,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 164,
											"end": 369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 164,
											"end": 369,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 374,
											"end": 565,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 374,
											"end": 565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 374,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 374,
											"end": 565,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 374,
											"end": 565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 374,
											"end": 565,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 374,
											"end": 565,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 374,
											"end": 565,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 374,
											"end": 565,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 374,
											"end": 565,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 374,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 374,
											"end": 565,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 374,
											"end": 565,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 374,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 374,
											"end": 565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 374,
											"end": 565,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 374,
											"end": 565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 374,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 374,
											"end": 565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 374,
											"end": 565,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 374,
											"end": 565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 374,
											"end": 565,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 565,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 374,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 374,
											"end": 565,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 374,
											"end": 565,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 374,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 374,
											"end": 565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 374,
											"end": 565,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 374,
											"end": 565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 374,
											"end": 565,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 565,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 374,
											"end": 565,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 374,
											"end": 565,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 374,
											"end": 565,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 374,
											"end": 565,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 374,
											"end": 565,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 164,
											"end": 369,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 164,
											"end": 369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 272,
											"end": 276,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 338,
											"end": 344,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 346,
											"end": 350,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 352,
											"end": 361,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 294,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 294,
											"end": 362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 294,
											"end": 362,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 294,
											"end": 362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 287,
											"end": 362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 164,
											"end": 369,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 164,
											"end": 369,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 164,
											"end": 369,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 164,
											"end": 369,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 164,
											"end": 369,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 164,
											"end": 369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 374,
											"end": 565,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 374,
											"end": 565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 475,
											"end": 479,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 497,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 534,
											"end": 540,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 542,
											"end": 546,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 548,
											"end": 557,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 497,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 497,
											"end": 558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 497,
											"end": 558,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 497,
											"end": 558,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 490,
											"end": 558,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 490,
											"end": 558,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 374,
											"end": 565,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 374,
											"end": 565,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 374,
											"end": 565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 374,
											"end": 565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 374,
											"end": 565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 374,
											"end": 565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1813,
											"end": 2271,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1813,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1956,
											"end": 1960,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1973,
											"end": 1985,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1987,
											"end": 2006,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2016,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2027,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2010,
											"end": 2027,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2088,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2090,
											"end": 2099,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2041,
											"end": 2101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "PUSH",
											"source": 2,
											"value": "1626BA7E"
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2010,
											"end": 2111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2111,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1972,
											"end": 2111,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1972,
											"end": 2111,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1972,
											"end": 2111,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1972,
											"end": 2111,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2129,
											"end": 2136,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2129,
											"end": 2171,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2129,
											"end": 2171,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2129,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2129,
											"end": 2171,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2129,
											"end": 2171,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2171,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2152,
											"end": 2158,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2152,
											"end": 2165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2152,
											"end": 2171,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2152,
											"end": 2171,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2129,
											"end": 2171,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2129,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2129,
											"end": 2263,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2129,
											"end": 2263,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2129,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2129,
											"end": 2263,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2129,
											"end": 2263,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2262,
											"name": "PUSH",
											"source": 2,
											"value": "1626BA7E"
										},
										{
											"begin": 2228,
											"end": 2262,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2228,
											"end": 2262,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2220,
											"end": 2263,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2220,
											"end": 2263,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2220,
											"end": 2263,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2198,
											"end": 2204,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2187,
											"end": 2216,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2187,
											"end": 2216,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2187,
											"end": 2216,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2187,
											"end": 2216,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2187,
											"end": 2216,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2187,
											"end": 2216,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2187,
											"end": 2216,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2187,
											"end": 2216,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2187,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2187,
											"end": 2216,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2187,
											"end": 2216,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2187,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2187,
											"end": 2216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2187,
											"end": 2216,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2187,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2187,
											"end": 2263,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2129,
											"end": 2263,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2129,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2264,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2264,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2264,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2264,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 2271,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 2271,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 2271,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 2271,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 2271,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 2271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1039,
											"end": 1407,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1039,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1179,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1205,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1228,
											"end": 1232,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1234,
											"end": 1243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1211,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1211,
											"end": 1244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1211,
											"end": 1244,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1211,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1161,
											"end": 1244,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1161,
											"end": 1244,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1161,
											"end": 1244,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1161,
											"end": 1244,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1161,
											"end": 1244,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1309,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1274,
											"end": 1309,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1309,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1309,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1274,
											"end": 1309,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1274,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1274,
											"end": 1309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1309,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1274,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1309,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1274,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1279,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1309,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1274,
											"end": 1309,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1309,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1309,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1274,
											"end": 1309,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1274,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1274,
											"end": 1309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1309,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1274,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1309,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1274,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1309,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1332,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1332,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1274,
											"end": 1332,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1326,
											"end": 1332,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1313,
											"end": 1332,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1313,
											"end": 1332,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1313,
											"end": 1322,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1313,
											"end": 1332,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1313,
											"end": 1332,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1313,
											"end": 1332,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1332,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1274,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1400,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1273,
											"end": 1400,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1400,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1376,
											"end": 1382,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1384,
											"end": 1388,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1399,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1349,
											"end": 1400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1400,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1349,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1400,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1273,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1400,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1400,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1400,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1254,
											"end": 1400,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1039,
											"end": 1407,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1039,
											"end": 1407,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1039,
											"end": 1407,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1039,
											"end": 1407,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1039,
											"end": 1407,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1039,
											"end": 1407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2129,
											"end": 2895,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2129,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2210,
											"end": 2217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2240,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2276,
											"end": 2278,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2256,
											"end": 2265,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2272,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2278,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2252,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2252,
											"end": 2889,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2294,
											"end": 2303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2326,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2347,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2592,
											"end": 2596,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2581,
											"end": 2590,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2577,
											"end": 2597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2571,
											"end": 2598,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2598,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2641,
											"end": 2645,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2630,
											"end": 2639,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2646,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2647,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2647,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2702,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2687,
											"end": 2696,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 2703,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2704,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2674,
											"end": 2675,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2669,
											"end": 2705,
											"name": "BYTE",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2750,
											"end": 2754,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2756,
											"end": 2757,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2759,
											"end": 2760,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2763,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2739,
											"end": 2764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2764,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2739,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2252,
											"end": 2889,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2252,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2811,
											"end": 2812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2850,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2860,
											"end": 2869,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2876,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2877,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2852,
											"end": 2877,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2878,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2878,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2878,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2895,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2129,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2895,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2895,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2895,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5266,
											"end": 5273,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5275,
											"end": 5287,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5289,
											"end": 5296,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6199,
											"end": 6265,
											"name": "PUSH",
											"source": 1,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 6194,
											"end": 6195,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6186,
											"end": 6196,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6186,
											"end": 6196,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 6186,
											"end": 6265,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6297,
											"end": 6298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6301,
											"end": 6331,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 6333,
											"end": 6334,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6440,
											"end": 6454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6467,
											"end": 6471,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 6473,
											"end": 6474,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 6476,
											"end": 6477,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6480,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6457,
											"end": 6481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6440,
											"end": 6481,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6440,
											"end": 6481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6513,
											"end": 6514,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6501,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6548,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6551,
											"end": 6580,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6590,
											"end": 6591,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6582,
											"end": 6592,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6582,
											"end": 6592,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6622,
											"end": 6628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6630,
											"end": 6650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6660,
											"end": 6661,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 6670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1314,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1197,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1306,
											"end": 1307,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1303,
											"end": 1304,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1308,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1320,
											"end": 1437,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1320,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1427,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1419,
											"end": 1431,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1443,
											"end": 1545,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1443,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1484,
											"end": 1490,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1537,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1531,
											"end": 1538,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1528,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1519,
											"end": 1524,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1515,
											"end": 1529,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1511,
											"end": 1539,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1501,
											"end": 1539,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1501,
											"end": 1539,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1443,
											"end": 1545,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1443,
											"end": 1545,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1443,
											"end": 1545,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1443,
											"end": 1545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1551,
											"end": 1731,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1551,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1599,
											"end": 1676,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1596,
											"end": 1597,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1589,
											"end": 1677,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1696,
											"end": 1700,
											"name": "PUSH",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1693,
											"end": 1694,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1686,
											"end": 1701,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1724,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1717,
											"end": 1718,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1725,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2018,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1737,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 1842,
											"end": 1846,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1820,
											"end": 1847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1812,
											"end": 1818,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1808,
											"end": 1848,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1950,
											"end": 1956,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1948,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 1957,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1914,
											"end": 1932,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1902,
											"end": 1912,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1933,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1896,
											"end": 1958,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1961,
											"end": 1979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2001,
											"end": 2011,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1997,
											"end": 1999,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1990,
											"end": 2012,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1780,
											"end": 2018,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2018,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2018,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2153,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2024,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2058,
											"end": 2064,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2085,
											"end": 2105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2075,
											"end": 2105,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2075,
											"end": 2105,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2114,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2142,
											"end": 2146,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2134,
											"end": 2140,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2114,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2114,
											"end": 2147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2114,
											"end": 2147,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2114,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2153,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2153,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2153,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2159,
											"end": 2466,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2159,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2220,
											"end": 2224,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2310,
											"end": 2328,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2302,
											"end": 2308,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2299,
											"end": 2329,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2352,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2296,
											"end": 2352,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2332,
											"end": 2350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2352,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2296,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2392,
											"end": 2398,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2370,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2399,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2370,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2399,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2362,
											"end": 2399,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2454,
											"end": 2458,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2452,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2436,
											"end": 2459,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2436,
											"end": 2459,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2159,
											"end": 2466,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2159,
											"end": 2466,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2159,
											"end": 2466,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2159,
											"end": 2466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2472,
											"end": 2618,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2472,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2569,
											"end": 2575,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2567,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2559,
											"end": 2562,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2546,
											"end": 2576,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2611,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2601,
											"end": 2607,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2596,
											"end": 2599,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2592,
											"end": 2608,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2585,
											"end": 2612,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2472,
											"end": 2618,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2472,
											"end": 2618,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2472,
											"end": 2618,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2472,
											"end": 2618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2624,
											"end": 3047,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2624,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2701,
											"end": 2706,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2726,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2742,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2783,
											"end": 2789,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2742,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2742,
											"end": 2790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2742,
											"end": 2790,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2742,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2726,
											"end": 2791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2791,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2726,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2717,
											"end": 2791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2717,
											"end": 2791,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2814,
											"end": 2820,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2812,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2821,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2852,
											"end": 2856,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2845,
											"end": 2850,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2841,
											"end": 2857,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2890,
											"end": 2893,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2881,
											"end": 2887,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2876,
											"end": 2879,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2888,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2869,
											"end": 2894,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2866,
											"end": 2978,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2866,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2866,
											"end": 2978,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2897,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2897,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2897,
											"end": 2976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2897,
											"end": 2976,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2897,
											"end": 2976,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2866,
											"end": 2978,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2866,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2987,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 3034,
											"end": 3040,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3029,
											"end": 3032,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3027,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2987,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2987,
											"end": 3041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2987,
											"end": 3041,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 2987,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 3047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2624,
											"end": 3047,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2624,
											"end": 3047,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2624,
											"end": 3047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2624,
											"end": 3047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2624,
											"end": 3047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2624,
											"end": 3047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3066,
											"end": 3404,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 3066,
											"end": 3404,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3121,
											"end": 3126,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3170,
											"end": 3173,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3167,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3151,
											"end": 3168,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3174,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3137,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3137,
											"end": 3259,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3178,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3178,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 3178,
											"end": 3257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3178,
											"end": 3257,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3178,
											"end": 3257,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3137,
											"end": 3259,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3137,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3295,
											"end": 3301,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3282,
											"end": 3302,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3320,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3394,
											"end": 3397,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3386,
											"end": 3392,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3379,
											"end": 3383,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3371,
											"end": 3377,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3384,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3320,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 3320,
											"end": 3398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3320,
											"end": 3398,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3320,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3311,
											"end": 3398,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3311,
											"end": 3398,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3127,
											"end": 3404,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3066,
											"end": 3404,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3066,
											"end": 3404,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3066,
											"end": 3404,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3066,
											"end": 3404,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3066,
											"end": 3404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3410,
											"end": 4207,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3410,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3496,
											"end": 3502,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3504,
											"end": 3510,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3518,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3563,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3549,
											"end": 3558,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3540,
											"end": 3547,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3536,
											"end": 3559,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3564,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3529,
											"end": 3648,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3529,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3529,
											"end": 3648,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3567,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3567,
											"end": 3646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3646,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3567,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3529,
											"end": 3648,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3529,
											"end": 3648,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3687,
											"end": 3688,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3712,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 3757,
											"end": 3764,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3748,
											"end": 3754,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3737,
											"end": 3746,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3755,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 3712,
											"end": 3765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3712,
											"end": 3765,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 3712,
											"end": 3765,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3702,
											"end": 3765,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3702,
											"end": 3765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3658,
											"end": 3775,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3814,
											"end": 3816,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3840,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 3885,
											"end": 3892,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3876,
											"end": 3882,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3865,
											"end": 3874,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3883,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 3840,
											"end": 3893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3840,
											"end": 3893,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 3840,
											"end": 3893,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3830,
											"end": 3893,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3830,
											"end": 3893,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3970,
											"end": 3972,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3959,
											"end": 3968,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3955,
											"end": 3973,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3942,
											"end": 3974,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3993,
											"end": 3999,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4020,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4104,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 3987,
											"end": 4104,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4023,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 4023,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 4023,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4023,
											"end": 4102,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 4023,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4104,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 3987,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 4182,
											"end": 4189,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4173,
											"end": 4179,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4171,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4158,
											"end": 4180,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 4128,
											"end": 4190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4190,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 4128,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4190,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4190,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3913,
											"end": 4200,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3410,
											"end": 4207,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3410,
											"end": 4207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3410,
											"end": 4207,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3410,
											"end": 4207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3410,
											"end": 4207,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3410,
											"end": 4207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4213,
											"end": 4303,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4213,
											"end": 4303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4247,
											"end": 4254,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4290,
											"end": 4295,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4283,
											"end": 4296,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4297,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4265,
											"end": 4297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4265,
											"end": 4297,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4213,
											"end": 4303,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4213,
											"end": 4303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4213,
											"end": 4303,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4213,
											"end": 4303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4309,
											"end": 4418,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 4309,
											"end": 4418,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4390,
											"end": 4411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 4405,
											"end": 4410,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4390,
											"end": 4411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4390,
											"end": 4411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4390,
											"end": 4411,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 4390,
											"end": 4411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4385,
											"end": 4388,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4309,
											"end": 4418,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4309,
											"end": 4418,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4309,
											"end": 4418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4424,
											"end": 4634,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 4424,
											"end": 4634,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4511,
											"end": 4515,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4549,
											"end": 4551,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4538,
											"end": 4547,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4534,
											"end": 4552,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4526,
											"end": 4552,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4526,
											"end": 4552,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4627,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 4624,
											"end": 4625,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4613,
											"end": 4622,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4609,
											"end": 4626,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4600,
											"end": 4606,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4627,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 4562,
											"end": 4627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4627,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 4562,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4424,
											"end": 4634,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4424,
											"end": 4634,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4424,
											"end": 4634,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4424,
											"end": 4634,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4424,
											"end": 4634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4640,
											"end": 4758,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 4640,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4727,
											"end": 4751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 4745,
											"end": 4750,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4727,
											"end": 4751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 4727,
											"end": 4751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4727,
											"end": 4751,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 4727,
											"end": 4751,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4722,
											"end": 4725,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4715,
											"end": 4752,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4640,
											"end": 4758,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4640,
											"end": 4758,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4640,
											"end": 4758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4764,
											"end": 4862,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 4764,
											"end": 4862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4815,
											"end": 4821,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4849,
											"end": 4854,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4843,
											"end": 4855,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4833,
											"end": 4855,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4833,
											"end": 4855,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4764,
											"end": 4862,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4764,
											"end": 4862,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4764,
											"end": 4862,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4764,
											"end": 4862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4868,
											"end": 5036,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4868,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4951,
											"end": 4962,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4985,
											"end": 4991,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4980,
											"end": 4983,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4973,
											"end": 4992,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5025,
											"end": 5029,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5020,
											"end": 5023,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5016,
											"end": 5030,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5001,
											"end": 5030,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5001,
											"end": 5030,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4868,
											"end": 5036,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4868,
											"end": 5036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4868,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4868,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4868,
											"end": 5036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5042,
											"end": 5288,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 5042,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5123,
											"end": 5124,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5133,
											"end": 5246,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 5133,
											"end": 5246,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5147,
											"end": 5153,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5145,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5141,
											"end": 5154,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5246,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 5133,
											"end": 5246,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5232,
											"end": 5233,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5227,
											"end": 5230,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5223,
											"end": 5234,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5217,
											"end": 5235,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5213,
											"end": 5214,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5208,
											"end": 5211,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5204,
											"end": 5215,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5197,
											"end": 5236,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5169,
											"end": 5171,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5166,
											"end": 5167,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5172,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5157,
											"end": 5172,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5157,
											"end": 5172,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 5133,
											"end": 5246,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5133,
											"end": 5246,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 5133,
											"end": 5246,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5280,
											"end": 5281,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5271,
											"end": 5277,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5266,
											"end": 5269,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5262,
											"end": 5278,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5255,
											"end": 5282,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5104,
											"end": 5288,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5042,
											"end": 5288,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5042,
											"end": 5288,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5042,
											"end": 5288,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5042,
											"end": 5288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5294,
											"end": 5667,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 5294,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5380,
											"end": 5383,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5408,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 5440,
											"end": 5445,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5408,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 5408,
											"end": 5446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5408,
											"end": 5446,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 5408,
											"end": 5446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5462,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 5525,
											"end": 5531,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5520,
											"end": 5523,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5462,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5462,
											"end": 5532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5462,
											"end": 5532,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 5462,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5455,
											"end": 5532,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5455,
											"end": 5532,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5541,
											"end": 5606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 5599,
											"end": 5605,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5594,
											"end": 5597,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5587,
											"end": 5591,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5585,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5576,
											"end": 5592,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5541,
											"end": 5606,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 5541,
											"end": 5606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5541,
											"end": 5606,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 5541,
											"end": 5606,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5631,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 5653,
											"end": 5659,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5631,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 5631,
											"end": 5660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5631,
											"end": 5660,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 5631,
											"end": 5660,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5626,
											"end": 5629,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5622,
											"end": 5661,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5661,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5661,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5384,
											"end": 5667,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5294,
											"end": 5667,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5294,
											"end": 5667,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5294,
											"end": 5667,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5294,
											"end": 5667,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5294,
											"end": 5667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5673,
											"end": 6092,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 5673,
											"end": 6092,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5812,
											"end": 5816,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5850,
											"end": 5852,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5839,
											"end": 5848,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5863,
											"end": 5934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 5931,
											"end": 5932,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5920,
											"end": 5929,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5916,
											"end": 5933,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 5913,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5863,
											"end": 5934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 5863,
											"end": 5934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5863,
											"end": 5934,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 5863,
											"end": 5934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 5990,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5975,
											"end": 5979,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 5991,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5966,
											"end": 5968,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5955,
											"end": 5964,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5951,
											"end": 5969,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5944,
											"end": 5992,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6009,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 6080,
											"end": 6084,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6071,
											"end": 6077,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6009,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 6009,
											"end": 6085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6009,
											"end": 6085,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 6009,
											"end": 6085,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6001,
											"end": 6085,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6001,
											"end": 6085,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5673,
											"end": 6092,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5673,
											"end": 6092,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5673,
											"end": 6092,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5673,
											"end": 6092,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5673,
											"end": 6092,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5673,
											"end": 6092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6098,
											"end": 6245,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 6098,
											"end": 6245,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6199,
											"end": 6210,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6236,
											"end": 6239,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6221,
											"end": 6239,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6221,
											"end": 6239,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6098,
											"end": 6245,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6098,
											"end": 6245,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6098,
											"end": 6245,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6098,
											"end": 6245,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6098,
											"end": 6245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6637,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 6251,
											"end": 6637,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6355,
											"end": 6358,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6383,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 6415,
											"end": 6420,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6383,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 6383,
											"end": 6421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6383,
											"end": 6421,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 6383,
											"end": 6421,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6437,
											"end": 6525,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 6518,
											"end": 6524,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6513,
											"end": 6516,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6437,
											"end": 6525,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 6437,
											"end": 6525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6437,
											"end": 6525,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 6437,
											"end": 6525,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6430,
											"end": 6525,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6430,
											"end": 6525,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6534,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 6592,
											"end": 6598,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6587,
											"end": 6590,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6573,
											"end": 6578,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6569,
											"end": 6585,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6534,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 6534,
											"end": 6599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6534,
											"end": 6599,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 6534,
											"end": 6599,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6624,
											"end": 6630,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6619,
											"end": 6622,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6615,
											"end": 6631,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6631,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6631,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6359,
											"end": 6637,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6637,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6637,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6637,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6637,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 6914,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 6643,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6773,
											"end": 6776,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6795,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 6884,
											"end": 6887,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6875,
											"end": 6881,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6795,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 6795,
											"end": 6888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6795,
											"end": 6888,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 6795,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6788,
											"end": 6888,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6788,
											"end": 6888,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6905,
											"end": 6908,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6898,
											"end": 6908,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6898,
											"end": 6908,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 6914,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 6914,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 6914,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 6914,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 6914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6920,
											"end": 7063,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 6920,
											"end": 7063,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6977,
											"end": 6982,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7008,
											"end": 7014,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6993,
											"end": 7015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6993,
											"end": 7015,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7024,
											"end": 7057,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 7051,
											"end": 7056,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7024,
											"end": 7057,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 7024,
											"end": 7057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7024,
											"end": 7057,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 7024,
											"end": 7057,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6920,
											"end": 7063,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6920,
											"end": 7063,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6920,
											"end": 7063,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6920,
											"end": 7063,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6920,
											"end": 7063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7069,
											"end": 7420,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 7069,
											"end": 7420,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7139,
											"end": 7145,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7188,
											"end": 7190,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7176,
											"end": 7185,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7167,
											"end": 7174,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7163,
											"end": 7186,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7191,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 7156,
											"end": 7275,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7156,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 7156,
											"end": 7275,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7194,
											"end": 7273,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 7194,
											"end": 7273,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 7194,
											"end": 7273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7194,
											"end": 7273,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 7194,
											"end": 7273,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7156,
											"end": 7275,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 7156,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7314,
											"end": 7315,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7339,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 7395,
											"end": 7402,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7386,
											"end": 7392,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7384,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7371,
											"end": 7393,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7339,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 7339,
											"end": 7403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7339,
											"end": 7403,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 7339,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7329,
											"end": 7403,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7329,
											"end": 7403,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7285,
											"end": 7413,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7069,
											"end": 7420,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7069,
											"end": 7420,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7069,
											"end": 7420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7069,
											"end": 7420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7069,
											"end": 7420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7426,
											"end": 7606,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 7426,
											"end": 7606,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7474,
											"end": 7551,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7471,
											"end": 7472,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7464,
											"end": 7552,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7571,
											"end": 7575,
											"name": "PUSH",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 7568,
											"end": 7569,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7561,
											"end": 7576,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7595,
											"end": 7599,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 7592,
											"end": 7593,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7585,
											"end": 7600,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7612,
											"end": 7698,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 7612,
											"end": 7698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7647,
											"end": 7654,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7687,
											"end": 7691,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 7680,
											"end": 7685,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7676,
											"end": 7692,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7665,
											"end": 7692,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7665,
											"end": 7692,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7612,
											"end": 7698,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7612,
											"end": 7698,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7612,
											"end": 7698,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7612,
											"end": 7698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7704,
											"end": 7816,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 7704,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7787,
											"end": 7809,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 7803,
											"end": 7808,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7787,
											"end": 7809,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 7787,
											"end": 7809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7787,
											"end": 7809,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 7787,
											"end": 7809,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7782,
											"end": 7785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7775,
											"end": 7810,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7704,
											"end": 7816,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7704,
											"end": 7816,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7704,
											"end": 7816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7822,
											"end": 8367,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 7822,
											"end": 8367,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7995,
											"end": 7999,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8033,
											"end": 8036,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 8022,
											"end": 8031,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8018,
											"end": 8037,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8010,
											"end": 8037,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8010,
											"end": 8037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8047,
											"end": 8118,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 8115,
											"end": 8116,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8104,
											"end": 8113,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8100,
											"end": 8117,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8091,
											"end": 8097,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8047,
											"end": 8118,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 8047,
											"end": 8118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8047,
											"end": 8118,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 8047,
											"end": 8118,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8128,
											"end": 8196,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 8192,
											"end": 8194,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8181,
											"end": 8190,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8177,
											"end": 8195,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8168,
											"end": 8174,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8128,
											"end": 8196,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 8128,
											"end": 8196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8128,
											"end": 8196,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 8128,
											"end": 8196,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8206,
											"end": 8278,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 8274,
											"end": 8276,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8263,
											"end": 8272,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8259,
											"end": 8277,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8250,
											"end": 8256,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8206,
											"end": 8278,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 8206,
											"end": 8278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8206,
											"end": 8278,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 8206,
											"end": 8278,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8288,
											"end": 8360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 8356,
											"end": 8358,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 8345,
											"end": 8354,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8341,
											"end": 8359,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8332,
											"end": 8338,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8288,
											"end": 8360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 8288,
											"end": 8360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8288,
											"end": 8360,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 8288,
											"end": 8360,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7822,
											"end": 8367,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 7822,
											"end": 8367,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 7822,
											"end": 8367,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7822,
											"end": 8367,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7822,
											"end": 8367,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7822,
											"end": 8367,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7822,
											"end": 8367,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7822,
											"end": 8367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
								"UmiverseVerifyV2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"isValidERC1271Signature(address,bytes32,bytes)": "235110ca",
							"isValidSignature(address,bytes32,bytes)": "238a4d1e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidERC1271Signature\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"UmiverseVerifyV2.sol\":\"UmiverseVerifyV2\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x85a45f3f10014a0f8be41157a32b6a5f905753ea64a4b64e29fc12b7deeecf39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3c74009ce36136b36c77c23935b8e4a7b4f253be2da2be4fb4a916b1ce43743\",\"dweb:/ipfs/QmcH36v3iN7SJJuF73AunLR2LtNxhVJ1wm63ph4dPZ4pcL\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0x6b11eb41a228cca35d4b662b4df69fcd75192851365102690f57b2ac01e83fe6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab006a2983ed350d2af21ddcdd835dcae3b8340086cc4d088460da5abd041f69\",\"dweb:/ipfs/QmbEacDhkJZiGrgzLjB4pNtE8Z1uudjDw1DvcDUTVQFsLG\"]},\"UmiverseVerifyV2.sol\":{\"keccak256\":\"0xd0acd8a10399e6f5bd9977cb74c9c6795af0124d7f24a03f7de699224c4aef6e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b3d873216e10c2f2b2400cf2affa26055a4e1f17038c2fec178a58030ae89d3\",\"dweb:/ipfs/QmYazcbibLrP31phJvF8m6EMYVmf1n255JcAe1voazbh5J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC1271.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1271.sol",
					"exportedSymbols": {
						"IERC1271": [
							13
						]
					},
					"id": 14,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1271",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "133:159:0",
								"text": " @dev Interface of the ERC1271 standard signature validation method for\n contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271]."
							},
							"fullyImplemented": false,
							"id": 13,
							"linearizedBaseContracts": [
								13
							],
							"name": "IERC1271",
							"nameLocation": "303:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "318:220:0",
										"text": " @dev Should return whether the signature provided is valid for the provided data\n @param hash      Hash of the data to be signed\n @param signature Signature byte array associated with _data"
									},
									"functionSelector": "1626ba7e",
									"id": 12,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isValidSignature",
									"nameLocation": "552:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "577:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "569:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "569:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "596:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "583:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 6,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "583:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:38:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "magicValue",
												"nameLocation": "637:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "630:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 9,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "630:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "629:19:0"
									},
									"scope": 13,
									"src": "543:106:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 14,
							"src": "293:358:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:545:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
					"exportedSymbols": {
						"ECDSA": [
							361
						]
					},
					"id": 362,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 15,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 16,
								"nodeType": "StructuredDocumentation",
								"src": "138:205:1",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 361,
							"linearizedBaseContracts": [
								361
							],
							"name": "ECDSA",
							"nameLocation": "352:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 21,
									"members": [
										{
											"id": 17,
											"name": "NoError",
											"nameLocation": "392:7:1",
											"nodeType": "EnumValue",
											"src": "392:7:1"
										},
										{
											"id": 18,
											"name": "InvalidSignature",
											"nameLocation": "409:16:1",
											"nodeType": "EnumValue",
											"src": "409:16:1"
										},
										{
											"id": 19,
											"name": "InvalidSignatureLength",
											"nameLocation": "435:22:1",
											"nodeType": "EnumValue",
											"src": "435:22:1"
										},
										{
											"id": 20,
											"name": "InvalidSignatureS",
											"nameLocation": "467:17:1",
											"nodeType": "EnumValue",
											"src": "467:17:1"
										}
									],
									"name": "RecoverError",
									"nameLocation": "369:12:1",
									"nodeType": "EnumDefinition",
									"src": "364:126:1"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "496:63:1",
										"text": " @dev The signature derives the `address(0)`."
									},
									"errorSelector": "f645eedf",
									"id": 24,
									"name": "ECDSAInvalidSignature",
									"nameLocation": "570:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "591:2:1"
									},
									"src": "564:30:1"
								},
								{
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "600:60:1",
										"text": " @dev The signature has an invalid length."
									},
									"errorSelector": "fce698f7",
									"id": 29,
									"name": "ECDSAInvalidSignatureLength",
									"nameLocation": "671:27:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "707:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "699:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:16:1"
									},
									"src": "665:50:1"
								},
								{
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "721:85:1",
										"text": " @dev The signature has an S value that is in the upper half order."
									},
									"errorSelector": "d78bce0c",
									"id": 34,
									"name": "ECDSAInvalidSignatureS",
									"nameLocation": "817:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "848:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "840:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:11:1"
									},
									"src": "811:40:1"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "2242:653:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 49,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "2256:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 50,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2266:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2256:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2276:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "2256:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 84,
													"nodeType": "Block",
													"src": "2781:108:1",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 73,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2811:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 72,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2803:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 71,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2803:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 74,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2803:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 75,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 21,
																			"src": "2815:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$21_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 76,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2828:22:1",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 19,
																		"src": "2815:35:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$21",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 79,
																					"name": "signature",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 39,
																					"src": "2860:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 80,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2870:6:1",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2860:16:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 78,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2852:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 77,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "2852:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 81,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2852:25:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 82,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2802:76:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$21_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 48,
															"id": 83,
															"nodeType": "Return",
															"src": "2795:83:1"
														}
													]
												},
												"id": 85,
												"nodeType": "IfStatement",
												"src": "2252:637:1",
												"trueBody": {
													"id": 70,
													"nodeType": "Block",
													"src": "2280:495:1",
													"statements": [
														{
															"assignments": [
																54
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 54,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "2302:1:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 70,
																	"src": "2294:9:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 53,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2294:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 55,
															"nodeType": "VariableDeclarationStatement",
															"src": "2294:9:1"
														},
														{
															"assignments": [
																57
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 57,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "2325:1:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 70,
																	"src": "2317:9:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 56,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2317:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 58,
															"nodeType": "VariableDeclarationStatement",
															"src": "2317:9:1"
														},
														{
															"assignments": [
																60
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 60,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "2346:1:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 70,
																	"src": "2340:7:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 59,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2340:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 61,
															"nodeType": "VariableDeclarationStatement",
															"src": "2340:7:1"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "2548:171:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2566:32:1",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nodeType": "YulIdentifier",
																							"src": "2581:9:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2592:4:1",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2577:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2577:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2571:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2571:27:1"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "2566:1:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2615:32:1",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nodeType": "YulIdentifier",
																							"src": "2630:9:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2641:4:1",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2626:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2626:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2620:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2620:27:1"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nodeType": "YulIdentifier",
																				"src": "2615:1:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2664:41:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2674:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nodeType": "YulIdentifier",
																									"src": "2687:9:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2698:4:1",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2683:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2683:20:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2677:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2677:27:1"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nodeType": "YulIdentifier",
																				"src": "2669:4:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2669:36:1"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nodeType": "YulIdentifier",
																				"src": "2664:1:1"
																			}
																		]
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 54,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2566:1:1",
																	"valueSize": 1
																},
																{
																	"declaration": 57,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2615:1:1",
																	"valueSize": 1
																},
																{
																	"declaration": 39,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2581:9:1",
																	"valueSize": 1
																},
																{
																	"declaration": 39,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2630:9:1",
																	"valueSize": 1
																},
																{
																	"declaration": 39,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2687:9:1",
																	"valueSize": 1
																},
																{
																	"declaration": 60,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2664:1:1",
																	"valueSize": 1
																}
															],
															"id": 62,
															"nodeType": "InlineAssembly",
															"src": "2539:180:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 64,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "2750:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 65,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 60,
																		"src": "2756:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 66,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 54,
																		"src": "2759:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 67,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 57,
																		"src": "2762:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 63,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		87,
																		167,
																		275
																	],
																	"referencedDeclaration": 275,
																	"src": "2739:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$21_$_t_bytes32_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																	}
																},
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2739:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$21_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 48,
															"id": 69,
															"nodeType": "Return",
															"src": "2732:32:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "857:1267:1",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"
									},
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "2138:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2157:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2149:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 36,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2176:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2163:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 38,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2163:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2148:38:1"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2210:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2210:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2219:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$21",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 44,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 43,
														"name": "RecoverError",
														"nameLocations": [
															"2219:12:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 21,
														"src": "2219:12:1"
													},
													"referencedDeclaration": 21,
													"src": "2219:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$21",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2233:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 46,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2233:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:32:1"
									},
									"scope": 361,
									"src": "2129:766:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 116,
										"nodeType": "Block",
										"src": "3789:168:1",
										"statements": [
											{
												"assignments": [
													98,
													101,
													103
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "3808:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 116,
														"src": "3800:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3800:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 101,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "3832:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 116,
														"src": "3819:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$21",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 100,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 99,
																"name": "RecoverError",
																"nameLocations": [
																	"3819:12:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 21,
																"src": "3819:12:1"
															},
															"referencedDeclaration": 21,
															"src": "3819:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$21",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 103,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "3847:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 116,
														"src": "3839:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 102,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3839:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 108,
												"initialValue": {
													"arguments": [
														{
															"id": 105,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "3870:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 106,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "3876:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 104,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															87,
															167,
															275
														],
														"referencedDeclaration": 87,
														"src": "3859:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$21_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3859:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$21_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3799:87:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 110,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "3908:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$21",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 111,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "3915:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$21",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 109,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "3896:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$21_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3896:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "3896:28:1"
											},
											{
												"expression": {
													"id": 114,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 98,
													"src": "3941:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 96,
												"id": 115,
												"nodeType": "Return",
												"src": "3934:16:1"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "2901:796:1",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."
									},
									"id": 117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "3711:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3727:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "3719:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 89,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3746:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "3733:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 91,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3733:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3718:38:1"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "3780:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3780:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3779:9:1"
									},
									"scope": 361,
									"src": "3702:255:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "4285:342:1",
										"statements": [
											{
												"id": 165,
												"nodeType": "UncheckedBlock",
												"src": "4295:326:1",
												"statements": [
													{
														"assignments": [
															135
														],
														"declarations": [
															{
																"constant": false,
																"id": 135,
																"mutability": "mutable",
																"name": "s",
																"nameLocation": "4327:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 165,
																"src": "4319:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 134,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "4319:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 142,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 136,
																"name": "vs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "4331:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																		"id": 139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4344:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		},
																		"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		}
																	],
																	"id": 138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4336:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 137,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "4336:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 140,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4336:75:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "4331:80:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4319:92:1"
													},
													{
														"assignments": [
															144
														],
														"declarations": [
															{
																"constant": false,
																"id": 144,
																"mutability": "mutable",
																"name": "v",
																"nameLocation": "4528:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 165,
																"src": "4522:7:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 143,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4522:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 157,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 152,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 149,
																							"name": "vs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 124,
																							"src": "4547:2:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 148,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4539:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 147,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "4539:7:1",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 150,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4539:11:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "323535",
																					"id": 151,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4554:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_255_by_1",
																						"typeString": "int_const 255"
																					},
																					"value": "255"
																				},
																				"src": "4539:18:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 153,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4538:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3237",
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4561:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_27_by_1",
																			"typeString": "int_const 27"
																		},
																		"value": "27"
																	},
																	"src": "4538:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4532:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 145,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4532:5:1",
																	"typeDescriptions": {}
																}
															},
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4532:32:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4522:42:1"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 159,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "4596:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 160,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 144,
																	"src": "4602:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 161,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "4605:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 162,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "4608:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 158,
																"name": "tryRecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	87,
																	167,
																	275
																],
																"referencedDeclaration": 275,
																"src": "4585:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$21_$_t_bytes32_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4585:25:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$21_$_t_bytes32_$",
																"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
															}
														},
														"functionReturnParameters": 133,
														"id": 164,
														"nodeType": "Return",
														"src": "4578:32:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 118,
										"nodeType": "StructuredDocumentation",
										"src": "3963:205:1",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"
									},
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "4182:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4201:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4193:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4215:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4207:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 121,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4207:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4226:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4218:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 123,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4218:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:37:1"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4253:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4253:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4262:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$21",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 129,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 128,
														"name": "RecoverError",
														"nameLocations": [
															"4262:12:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 21,
														"src": "4262:12:1"
													},
													"referencedDeclaration": 21,
													"src": "4262:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$21",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4276:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4276:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4252:32:1"
									},
									"scope": 361,
									"src": "4173:454:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "4840:164:1",
										"statements": [
											{
												"assignments": [
													180,
													183,
													185
												],
												"declarations": [
													{
														"constant": false,
														"id": 180,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "4859:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 199,
														"src": "4851:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 179,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4851:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 183,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "4883:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 199,
														"src": "4870:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$21",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 182,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 181,
																"name": "RecoverError",
																"nameLocations": [
																	"4870:12:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 21,
																"src": "4870:12:1"
															},
															"referencedDeclaration": 21,
															"src": "4870:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$21",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 185,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "4898:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 199,
														"src": "4890:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 184,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4890:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 191,
												"initialValue": {
													"arguments": [
														{
															"id": 187,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "4921:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 188,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "4927:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 189,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "4930:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 186,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															87,
															167,
															275
														],
														"referencedDeclaration": 167,
														"src": "4910:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$21_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4910:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$21_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:83:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 193,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "4955:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$21",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 194,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "4962:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$21",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 192,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "4943:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$21_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4943:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "4943:28:1"
											},
											{
												"expression": {
													"id": 197,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 180,
													"src": "4988:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 178,
												"id": 198,
												"nodeType": "Return",
												"src": "4981:16:1"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "4633:116:1",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "4763:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4779:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "4771:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 169,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4771:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4793:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "4785:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 171,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4785:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4804:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "4796:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 173,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4796:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4770:37:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "4831:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4831:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4830:9:1"
									},
									"scope": 361,
									"src": "4754:250:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "5298:1372:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 221,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "6194:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6186:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 219,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6186:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6186:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 223,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6199:66:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "6186:79:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 235,
												"nodeType": "IfStatement",
												"src": "6182:164:1",
												"trueBody": {
													"id": 234,
													"nodeType": "Block",
													"src": "6267:79:1",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 227,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6297:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6289:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 225,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6289:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6289:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 229,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 21,
																			"src": "6301:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$21_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6314:17:1",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 20,
																		"src": "6301:30:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$21",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"id": 231,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "6333:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 232,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6288:47:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$21_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 218,
															"id": 233,
															"nodeType": "Return",
															"src": "6281:54:1"
														}
													]
												}
											},
											{
												"assignments": [
													237
												],
												"declarations": [
													{
														"constant": false,
														"id": 237,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "6448:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 274,
														"src": "6440:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 236,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6440:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 244,
												"initialValue": {
													"arguments": [
														{
															"id": 239,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "6467:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 240,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "6473:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 241,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "6476:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 242,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "6479:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 238,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "6457:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6457:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6440:41:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 245,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "6495:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6513:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6505:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 246,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6505:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6505:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6495:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 264,
												"nodeType": "IfStatement",
												"src": "6491:113:1",
												"trueBody": {
													"id": 263,
													"nodeType": "Block",
													"src": "6517:87:1",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 253,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6547:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 252,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6539:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 251,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6539:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6539:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 255,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 21,
																			"src": "6551:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$21_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6564:16:1",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6551:29:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$21",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 259,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6590:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6582:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 257,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "6582:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6582:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 261,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6538:55:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$21_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 218,
															"id": 262,
															"nodeType": "Return",
															"src": "6531:62:1"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 265,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "6622:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 266,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "6630:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$21_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6643:7:1",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 17,
															"src": "6630:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$21",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6660:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 269,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6652:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 268,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6652:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6652:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 272,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6621:42:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$21_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"functionReturnParameters": 218,
												"id": 273,
												"nodeType": "Return",
												"src": "6614:49:1"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "5010:125:1",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "5149:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "5177:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "5169:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 202,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5197:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "5191:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 204,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5191:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5216:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "5208:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 206,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5208:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5235:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "5227:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 208,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5227:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5159:83:1"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "5266:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5266:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "5275:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$21",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 214,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 213,
														"name": "RecoverError",
														"nameLocations": [
															"5275:12:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 21,
														"src": "5275:12:1"
													},
													"referencedDeclaration": 21,
													"src": "5275:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$21",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "5289:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 216,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5265:32:1"
									},
									"scope": 361,
									"src": "5140:1530:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "6897:166:1",
										"statements": [
											{
												"assignments": [
													290,
													293,
													295
												],
												"declarations": [
													{
														"constant": false,
														"id": 290,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "6916:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 310,
														"src": "6908:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 289,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6908:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 293,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "6940:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 310,
														"src": "6927:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$21",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 292,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 291,
																"name": "RecoverError",
																"nameLocations": [
																	"6927:12:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 21,
																"src": "6927:12:1"
															},
															"referencedDeclaration": 21,
															"src": "6927:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$21",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 295,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "6955:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 310,
														"src": "6947:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 294,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6947:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 302,
												"initialValue": {
													"arguments": [
														{
															"id": 297,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "6978:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 298,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "6984:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 299,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "6987:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 300,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "6990:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 296,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															87,
															167,
															275
														],
														"referencedDeclaration": 275,
														"src": "6967:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$21_$_t_bytes32_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6967:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$21_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6907:85:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 304,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "7014:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$21",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 305,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "7021:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$21",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 303,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "7002:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$21_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7002:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "7002:28:1"
											},
											{
												"expression": {
													"id": 308,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 290,
													"src": "7047:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 288,
												"id": 309,
												"nodeType": "Return",
												"src": "7040:16:1"
											}
										]
									},
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "6676:122:1",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "6812:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "6828:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "6820:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 277,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "6840:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "6834:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 279,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6834:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "6851:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "6843:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 281,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6843:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "6862:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "6854:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 283,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6854:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6819:45:1"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "6888:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6888:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6887:9:1"
									},
									"scope": 361,
									"src": "6803:260:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "7268:460:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$21",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 320,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "7282:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$21",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 321,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "7291:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$21_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 322,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7304:7:1",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "7291:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$21",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "7282:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$21",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 329,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 326,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "7378:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$21",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 327,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "7387:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$21_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "7400:16:1",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 18,
															"src": "7387:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$21",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "7378:38:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$21",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 334,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "7483:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$21",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 335,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7492:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$21_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 336,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7505:22:1",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 19,
																"src": "7492:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$21",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "7483:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$21",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 346,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "7617:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$21",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 347,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 21,
																		"src": "7626:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$21_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "7639:17:1",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 20,
																	"src": "7626:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$21",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "7617:39:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 355,
															"nodeType": "IfStatement",
															"src": "7613:109:1",
															"trueBody": {
																"id": 354,
																"nodeType": "Block",
																"src": "7658:64:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 351,
																					"name": "errorArg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 317,
																					"src": "7702:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 350,
																				"name": "ECDSAInvalidSignatureS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 34,
																				"src": "7679:22:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
																					"typeString": "function (bytes32) pure"
																				}
																			},
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7679:32:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 353,
																		"nodeType": "RevertStatement",
																		"src": "7672:39:1"
																	}
																]
															}
														},
														"id": 356,
														"nodeType": "IfStatement",
														"src": "7479:243:1",
														"trueBody": {
															"id": 345,
															"nodeType": "Block",
															"src": "7529:78:1",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 341,
																						"name": "errorArg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 317,
																						"src": "7586:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 340,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7578:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 339,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "7578:7:1",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 342,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7578:17:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 338,
																			"name": "ECDSAInvalidSignatureLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 29,
																			"src": "7550:27:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7550:46:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 344,
																	"nodeType": "RevertStatement",
																	"src": "7543:53:1"
																}
															]
														}
													},
													"id": 357,
													"nodeType": "IfStatement",
													"src": "7374:348:1",
													"trueBody": {
														"id": 333,
														"nodeType": "Block",
														"src": "7418:55:1",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 330,
																		"name": "ECDSAInvalidSignature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 24,
																		"src": "7439:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7439:23:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 332,
																"nodeType": "RevertStatement",
																"src": "7432:30:1"
															}
														]
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "7278:444:1",
												"trueBody": {
													"id": 325,
													"nodeType": "Block",
													"src": "7313:55:1",
													"statements": [
														{
															"functionReturnParameters": 319,
															"id": 324,
															"nodeType": "Return",
															"src": "7327:7:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "7069:122:1",
										"text": " @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "7205:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "7230:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "7217:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$21",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 313,
														"name": "RecoverError",
														"nameLocations": [
															"7217:12:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 21,
														"src": "7217:12:1"
													},
													"referencedDeclaration": 21,
													"src": "7217:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$21",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "errorArg",
												"nameLocation": "7245:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "7237:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 316,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7237:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7216:38:1"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7268:0:1"
									},
									"scope": 361,
									"src": "7196:532:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 362,
							"src": "344:7386:1",
							"usedErrors": [
								24,
								29,
								34
							],
							"usedEvents": []
						}
					],
					"src": "112:7619:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
					"exportedSymbols": {
						"ECDSA": [
							361
						],
						"IERC1271": [
							13
						],
						"SignatureChecker": [
							462
						]
					},
					"id": 463,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 363,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"file": "./ECDSA.sol",
							"id": 365,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 463,
							"sourceUnit": 362,
							"src": "149:34:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 364,
										"name": "ECDSA",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 361,
										"src": "157:5:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1271.sol",
							"file": "../../interfaces/IERC1271.sol",
							"id": 367,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 463,
							"sourceUnit": 14,
							"src": "184:55:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 366,
										"name": "IERC1271",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 13,
										"src": "192:8:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignatureChecker",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 368,
								"nodeType": "StructuredDocumentation",
								"src": "241:289:2",
								"text": " @dev Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA\n signatures from externally owned accounts (EOAs) as well as ERC1271 signatures from smart contract wallets like\n Argent and Safe Wallet (previously Gnosis Safe)."
							},
							"fullyImplemented": true,
							"id": 462,
							"linearizedBaseContracts": [
								462
							],
							"name": "SignatureChecker",
							"nameLocation": "539:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "1151:256:2",
										"statements": [
											{
												"assignments": [
													381,
													384,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 381,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "1170:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "1162:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 380,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1162:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 384,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "1200:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "1181:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$21",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 383,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 382,
																"name": "ECDSA.RecoverError",
																"nameLocations": [
																	"1181:5:2",
																	"1187:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 21,
																"src": "1181:18:2"
															},
															"referencedDeclaration": 21,
															"src": "1181:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$21",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 390,
												"initialValue": {
													"arguments": [
														{
															"id": 387,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "1228:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 388,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "1234:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 385,
															"name": "ECDSA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "1211:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECDSA_$361_$",
																"typeString": "type(library ECDSA)"
															}
														},
														"id": 386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1217:10:2",
														"memberName": "tryRecover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 87,
														"src": "1211:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$21_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1211:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$21_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1161:83:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_enum$_RecoverError_$21",
																		"typeString": "enum ECDSA.RecoverError"
																	},
																	"id": 395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 391,
																		"name": "error",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 384,
																		"src": "1274:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$21",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"expression": {
																				"id": 392,
																				"name": "ECDSA",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 361,
																				"src": "1283:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ECDSA_$361_$",
																					"typeString": "type(library ECDSA)"
																				}
																			},
																			"id": 393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1289:12:2",
																			"memberName": "RecoverError",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 21,
																			"src": "1283:18:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$21_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1302:7:2",
																		"memberName": "NoError",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 17,
																		"src": "1283:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$21",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	"src": "1274:35:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 396,
																		"name": "recovered",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 381,
																		"src": "1313:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 397,
																		"name": "signer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 371,
																		"src": "1326:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "1313:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1274:58:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 400,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1273:60:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 402,
																"name": "signer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 371,
																"src": "1376:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 403,
																"name": "hash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 373,
																"src": "1384:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 404,
																"name": "signature",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "1390:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 401,
															"name": "isValidERC1271SignatureNow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "1349:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (address,bytes32,bytes memory) view returns (bool)"
															}
														},
														"id": 405,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1349:51:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1273:127:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 379,
												"id": 407,
												"nodeType": "Return",
												"src": "1254:146:2"
											}
										]
									},
									"documentation": {
										"id": 369,
										"nodeType": "StructuredDocumentation",
										"src": "562:472:2",
										"text": " @dev Checks if a signature is valid for a given signer and data hash. If the signer is a smart contract, the\n signature is validated against that smart contract using ERC1271, otherwise it's validated using `ECDSA.recover`.\n NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n change through time. It could return true at block N and false at block N+1 (or the opposite)."
									},
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isValidSignatureNow",
									"nameLocation": "1048:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "1076:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1068:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1068:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "1092:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1084:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 372,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1084:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "1111:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1098:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 374,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1098:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1067:54:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1145:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 377,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1145:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:6:2"
									},
									"scope": 462,
									"src": "1039:368:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "1962:309:2",
										"statements": [
											{
												"assignments": [
													422,
													424
												],
												"declarations": [
													{
														"constant": false,
														"id": 422,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1978:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 460,
														"src": "1973:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 421,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1973:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 424,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "2000:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 460,
														"src": "1987:19:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 423,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1987:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 436,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 429,
																		"name": "IERC1271",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 13,
																		"src": "2056:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC1271_$13_$",
																			"typeString": "type(contract IERC1271)"
																		}
																	},
																	"id": 430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2065:16:2",
																	"memberName": "isValidSignature",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 12,
																	"src": "2056:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 431,
																			"name": "hash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 414,
																			"src": "2084:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"id": 432,
																			"name": "signature",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 416,
																			"src": "2090:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"id": 433,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2083:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes_memory_ptr_$",
																		"typeString": "tuple(bytes32,bytes memory)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes_memory_ptr_$",
																		"typeString": "tuple(bytes32,bytes memory)"
																	}
																],
																"expression": {
																	"id": 427,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2041:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2045:10:2",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2041:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2041:60:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 425,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "2010:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2017:10:2",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "2010:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2010:101:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1972:139:2"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 437,
																	"name": "success",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 422,
																	"src": "2129:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 438,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 424,
																			"src": "2152:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2159:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2152:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"hexValue": "3332",
																		"id": 440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2169:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	"src": "2152:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2129:42:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 445,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 424,
																			"src": "2198:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		{
																			"components": [
																				{
																					"id": 447,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "2207:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes32_$",
																						"typeString": "type(bytes32)"
																					},
																					"typeName": {
																						"id": 446,
																						"name": "bytes32",
																						"nodeType": "ElementaryTypeName",
																						"src": "2207:7:2",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"id": 448,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "2206:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			},
																			{
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			}
																		],
																		"expression": {
																			"id": 443,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2187:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2191:6:2",
																		"memberName": "decode",
																		"nodeType": "MemberAccess",
																		"src": "2187:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2187:29:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 452,
																					"name": "IERC1271",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 13,
																					"src": "2228:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC1271_$13_$",
																						"typeString": "type(contract IERC1271)"
																					}
																				},
																				"id": 453,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "2237:16:2",
																				"memberName": "isValidSignature",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 12,
																				"src": "2228:25:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"
																				}
																			},
																			"id": 454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "2254:8:2",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2228:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		],
																		"id": 451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2220:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes32_$",
																			"typeString": "type(bytes32)"
																		},
																		"typeName": {
																			"id": 450,
																			"name": "bytes32",
																			"nodeType": "ElementaryTypeName",
																			"src": "2220:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2220:43:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "2187:76:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2129:134:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 458,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2128:136:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 420,
												"id": 459,
												"nodeType": "Return",
												"src": "2121:143:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "1413:395:2",
										"text": " @dev Checks if a signature is valid for a given signer and data hash. The signature is validated\n against the signer smart contract using ERC1271.\n NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n change through time. It could return true at block N and false at block N+1 (or the opposite)."
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isValidERC1271SignatureNow",
									"nameLocation": "1822:26:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "1866:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "1858:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1858:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "1890:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "1882:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 413,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "1917:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "1904:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 415,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1904:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1848:84:2"
									},
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "1956:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 418,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1956:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1955:6:2"
									},
									"scope": 462,
									"src": "1813:458:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 463,
							"src": "531:1742:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:2151:2"
				},
				"id": 2
			},
			"UmiverseVerifyV2.sol": {
				"ast": {
					"absolutePath": "UmiverseVerifyV2.sol",
					"exportedSymbols": {
						"ECDSA": [
							361
						],
						"IERC1271": [
							13
						],
						"SignatureChecker": [
							462
						],
						"UmiverseVerifyV2": [
							504
						]
					},
					"id": 505,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 464,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
							"file": "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
							"id": 465,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 505,
							"sourceUnit": 463,
							"src": "57:73:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "UmiverseVerifyV2",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 504,
							"linearizedBaseContracts": [
								504
							],
							"name": "UmiverseVerifyV2",
							"nameLocation": "141:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "277:92:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 478,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "338:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 479,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "346:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 480,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "352:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 476,
															"name": "SignatureChecker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "294:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SignatureChecker_$462_$",
																"typeString": "type(library SignatureChecker)"
															}
														},
														"id": 477,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "311:26:3",
														"memberName": "isValidERC1271SignatureNow",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 461,
														"src": "294:43:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (address,bytes32,bytes memory) view returns (bool)"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "294:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 475,
												"id": 482,
												"nodeType": "Return",
												"src": "287:75:3"
											}
										]
									},
									"functionSelector": "235110ca",
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isValidERC1271Signature",
									"nameLocation": "173:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "205:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "197:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "197:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "221:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "213:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 468,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "213:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "240:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "227:22:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 470,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "227:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "196:54:3"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "272:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 473,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "272:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "271:6:3"
									},
									"scope": 504,
									"src": "164:205:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 502,
										"nodeType": "Block",
										"src": "480:85:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 497,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "534:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 498,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "542:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 499,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "548:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 495,
															"name": "SignatureChecker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "497:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SignatureChecker_$462_$",
																"typeString": "type(library SignatureChecker)"
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "514:19:3",
														"memberName": "isValidSignatureNow",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 409,
														"src": "497:36:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (address,bytes32,bytes memory) view returns (bool)"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "497:61:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 494,
												"id": 501,
												"nodeType": "Return",
												"src": "490:68:3"
											}
										]
									},
									"functionSelector": "238a4d1e",
									"id": 503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isValidSignature",
									"nameLocation": "383:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "408:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "400:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "400:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "424:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "416:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 487,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "416:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "443:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "430:22:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 489,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "430:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "399:54:3"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "475:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 492,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "475:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:6:3"
									},
									"scope": 504,
									"src": "374:191:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 505,
							"src": "132:435:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:536:3"
				},
				"id": 3
			}
		}
	}
}